{
  "name": "N8n nodes - external nodes parameters",
  "nodes": [
    {
      "parameters": {
        "fieldToSplitOut": "properties",
        "include": "selectedOtherFields",
        "fieldsToInclude": {
          "fields": [
            {
              "fieldName": "name"
            }
          ]
        },
        "options": {}
      },
      "id": "29071376-f003-479c-bcc7-ffc50e0dee25",
      "name": "Item Lists",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 1,
      "position": [
        1100,
        620
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "options",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "0f55b3be-619a-460b-94f4-a88996af979a",
      "name": "Item Lists2",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 1,
      "position": [
        1760,
        240
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "property_name",
              "value": "={{ $json[\"properties\"][\"name\"] }}"
            },
            {
              "name": "property_type",
              "value": "={{ $json[\"properties\"][\"type\"] }}"
            },
            {
              "name": "resource",
              "value": "={{ $json[\"properties\"][\"displayOptions\"][\"show\"][\"resource\"] }}"
            },
            {
              "name": "options",
              "value": "={{ $json[\"properties\"][\"options\"] }}"
            },
            {
              "name": "name",
              "value": "={{ $json[\"name\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "fa5ceab7-ee58-4b51-84b6-1857118c5eb9",
      "name": "Set2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1300,
        400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.property_name}}",
              "value2": "operation"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "7249ad28-5ea6-438a-956e-434a2829fe2b",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1500,
        400
      ]
    },
    {
      "parameters": {},
      "id": "4fa97aac-f225-4836-a820-5e46c62ae99d",
      "name": "When Called By Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        880,
        400
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "={{$json[\"property_name\"]}}",
              "value": "={{ $json[\"options\"][\"value\"] }}"
            },
            {
              "name": "option_description",
              "value": "={{ $json[\"options\"][\"description\"] }}"
            },
            {
              "name": "resource",
              "value": "={{ $json[\"resource\"] }}"
            },
            {
              "name": "name",
              "value": "={{ $json[\"name\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f66c0acf-1fff-4929-a26f-a8b3a378fb15",
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1960,
        220
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "resource",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "71de90c9-71cb-4564-8a64-4974cef839c5",
      "name": "Item Lists3",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 1,
      "position": [
        2200,
        200
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json[\"name\"] }}",
              "value2": "n8n-nodes-base.contentful"
            }
          ]
        }
      },
      "id": "3cf96900-8982-4d7a-a567-9927154985a9",
      "name": "IF1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1420,
        620
      ],
      "disabled": true
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "operation",
              "value": "={{ $json[\"operation\"] }}"
            },
            {
              "name": "option_description:",
              "value": "={{ $json[\"option_description\"] }}"
            },
            {
              "name": "resource",
              "value": "={{ $json[\"resource\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6def679a-dd4a-4fc4-be68-8d9aa9a1269c",
      "name": "Set1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1780,
        600
      ],
      "disabled": true
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "id",
              "value": "={{ $json[\"name\"] }}{{ $json[\"resource\"]+\"\" }}{{ $json[\"operation\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9d62a69a-9331-4436-86ca-2bc1cdb06691",
      "name": "Set3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3080,
        220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json[\"resource\"] }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "8ea2f441-7095-41e2-8482-82ead336227d",
      "name": "IF2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2120,
        400
      ]
    },
    {
      "parameters": {},
      "id": "d1cff5e0-064a-4feb-a133-a783223b4fd8",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        2460,
        220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json[\"resource\"] }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "9ce36d5f-86b0-4957-abfb-748e9006e36e",
      "name": "IF3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2680,
        220
      ]
    },
    {
      "parameters": {},
      "id": "ff1114ba-b19d-4185-aca9-4869fa95b774",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        2900,
        200
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "id",
              "value": "={{ $json[\"name\"] }}{{ $json[\"operation\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e424903f-8c5b-4fa8-9f0e-b4a735464dfd",
      "name": "Set4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        2880,
        460
      ]
    },
    {
      "parameters": {
        "operation": "upsert",
        "projectId": "womespaces",
        "collection": "operation_options",
        "updateKey": "id",
        "columns": "operation,option_description,name,resource"
      },
      "id": "6a178aa2-c6ad-4658-b948-5438daf74857",
      "name": "Google Cloud Firestore",
      "type": "n8n-nodes-base.googleFirebaseCloudFirestore",
      "typeVersion": 1,
      "position": [
        3840,
        220
      ],
      "credentials": {
        "googleFirebaseCloudFirestoreOAuth2Api": {
          "id": "16",
          "name": "Google Firebase Cloud Firestore account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json[\"option_description\"] }}",
              "operation": "isNotEmpty"
            },
            {
              "value1": "={{ $json[\"resource\"] }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "25496e01-5e9e-4527-809a-30e0045020a6",
      "name": "IF4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3400,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json[\"resource\"] }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "ead17959-8d63-49a7-8e5d-7c1a8535851f",
      "name": "IF5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3300,
        580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json[\"option_description\"] }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "ab532fbd-ca28-492f-b876-63750fa3c51b",
      "name": "IF6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3480,
        440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.option_description}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "94f0b81a-4d25-4cdc-93ce-9d85bad2e73d",
      "name": "IF7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3580,
        780
      ]
    },
    {
      "parameters": {
        "operation": "upsert",
        "projectId": "womespaces",
        "collection": "operation_options",
        "updateKey": "id",
        "columns": "operation,name,resource"
      },
      "id": "0f474f82-9fe3-4b9e-8e6e-9a69824e60b0",
      "name": "Google Cloud Firestore1",
      "type": "n8n-nodes-base.googleFirebaseCloudFirestore",
      "typeVersion": 1,
      "position": [
        3820,
        480
      ],
      "credentials": {
        "googleFirebaseCloudFirestoreOAuth2Api": {
          "id": "16",
          "name": "Google Firebase Cloud Firestore account"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "projectId": "womespaces",
        "collection": "operation_options",
        "updateKey": "id",
        "columns": "operation,option_description,name"
      },
      "id": "086ac7af-b7ca-4975-822a-e74f5de631c6",
      "name": "Google Cloud Firestore2",
      "type": "n8n-nodes-base.googleFirebaseCloudFirestore",
      "typeVersion": 1,
      "position": [
        3840,
        680
      ],
      "credentials": {
        "googleFirebaseCloudFirestoreOAuth2Api": {
          "id": "16",
          "name": "Google Firebase Cloud Firestore account"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "projectId": "womespaces",
        "collection": "operation_options",
        "updateKey": "id",
        "columns": "operation,name"
      },
      "id": "a853c32c-fbfa-4a73-a946-efb6061d2ae0",
      "name": "Google Cloud Firestore3",
      "type": "n8n-nodes-base.googleFirebaseCloudFirestore",
      "typeVersion": 1,
      "position": [
        3840,
        880
      ],
      "credentials": {
        "googleFirebaseCloudFirestoreOAuth2Api": {
          "id": "16",
          "name": "Google Firebase Cloud Firestore account"
        }
      }
    },
    {
      "parameters": {
        "operation": "removeDuplicates",
        "compare": "selectedFields",
        "fieldsToCompare": {
          "fields": [
            {
              "fieldName": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "043dccf8-1bf6-4faa-8216-b235f90fcbfe",
      "name": "Item Lists1",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 1,
      "position": [
        3240,
        280
      ]
    }
  ],
  "pinData": {
    "When Called By Another Workflow": [
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Authentication",
            "name": "authentication",
            "type": "options",
            "options": [
              {
                "name": "Access Token",
                "value": "accessToken"
              },
              {
                "name": "OAuth2",
                "value": "oAuth2"
              }
            ],
            "default": "accessToken"
          },
          "property_name": "authentication",
          "property_type": [
            {
              "name": "Access Token",
              "value": "accessToken"
            },
            {
              "name": "OAuth2",
              "value": "oAuth2"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Resource",
            "name": "resource",
            "type": "options",
            "noDataExpression": true,
            "options": [
              {
                "name": "Channel",
                "value": "channel"
              },
              {
                "name": "File",
                "value": "file"
              },
              {
                "name": "Message",
                "value": "message"
              },
              {
                "name": "Reaction",
                "value": "reaction"
              },
              {
                "name": "Star",
                "value": "star"
              },
              {
                "name": "User",
                "value": "user"
              },
              {
                "name": "User Group",
                "value": "userGroup"
              },
              {
                "name": "User Profile",
                "value": "userProfile"
              },
              {
                "name": "Custom API Call",
                "value": "__CUSTOM_API_CALL__"
              }
            ],
            "default": "message"
          },
          "property_name": "resource",
          "property_type": [
            {
              "name": "Channel",
              "value": "channel"
            },
            {
              "name": "File",
              "value": "file"
            },
            {
              "name": "Message",
              "value": "message"
            },
            {
              "name": "Reaction",
              "value": "reaction"
            },
            {
              "name": "Star",
              "value": "star"
            },
            {
              "name": "User",
              "value": "user"
            },
            {
              "name": "User Group",
              "value": "userGroup"
            },
            {
              "name": "User Profile",
              "value": "userProfile"
            },
            {
              "name": "Custom API Call",
              "value": "__CUSTOM_API_CALL__"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ]
              }
            },
            "options": [
              {
                "name": "Archive",
                "value": "archive",
                "description": "Archives a conversation",
                "action": "Archive a channel"
              },
              {
                "name": "Close",
                "value": "close",
                "description": "Closes a direct message or multi-person direct message",
                "action": "Close a channel"
              },
              {
                "name": "Create",
                "value": "create",
                "description": "Initiates a public or private channel-based conversation",
                "action": "Create a channel"
              },
              {
                "name": "Get",
                "value": "get",
                "description": "Get information about a channel",
                "action": "Get a channel"
              },
              {
                "name": "Get Many",
                "value": "getAll",
                "description": "Get many channels in a Slack team",
                "action": "Get many channels"
              },
              {
                "name": "History",
                "value": "history",
                "description": "Get a conversation's history of messages and events",
                "action": "Get the history of a channel"
              },
              {
                "name": "Invite",
                "value": "invite",
                "description": "Invite a user to a channel",
                "action": "Invite a user to a channel"
              },
              {
                "name": "Join",
                "value": "join",
                "description": "Joins an existing conversation",
                "action": "Join a channel"
              },
              {
                "name": "Kick",
                "value": "kick",
                "description": "Removes a user from a channel",
                "action": "Kick a user from a channel"
              },
              {
                "name": "Leave",
                "value": "leave",
                "description": "Leaves a conversation",
                "action": "Leave a channel"
              },
              {
                "name": "Member",
                "value": "member",
                "description": "List members of a conversation",
                "action": "Get members of a channel"
              },
              {
                "name": "Open",
                "value": "open",
                "description": "Opens or resumes a direct message or multi-person direct message",
                "action": "Open a channel"
              },
              {
                "name": "Rename",
                "value": "rename",
                "description": "Renames a conversation",
                "action": "Rename a channel"
              },
              {
                "name": "Replies",
                "value": "replies",
                "description": "Get a thread of messages posted to a channel",
                "action": "Get a thread of messages posted to a channel"
              },
              {
                "name": "Set Purpose",
                "value": "setPurpose",
                "description": "Sets the purpose for a conversation",
                "action": "Set the purpose of a channel"
              },
              {
                "name": "Set Topic",
                "value": "setTopic",
                "description": "Sets the topic for a conversation",
                "action": "Set the topic of a channel"
              },
              {
                "name": "Unarchive",
                "value": "unarchive",
                "description": "Unarchives a conversation",
                "action": "Unarchive a channel"
              },
              {
                "name": "Custom API Call",
                "value": "__CUSTOM_API_CALL__"
              }
            ],
            "default": "create"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Archive",
              "value": "archive",
              "description": "Archives a conversation",
              "action": "Archive a channel"
            },
            {
              "name": "Close",
              "value": "close",
              "description": "Closes a direct message or multi-person direct message",
              "action": "Close a channel"
            },
            {
              "name": "Create",
              "value": "create",
              "description": "Initiates a public or private channel-based conversation",
              "action": "Create a channel"
            },
            {
              "name": "Get",
              "value": "get",
              "description": "Get information about a channel",
              "action": "Get a channel"
            },
            {
              "name": "Get Many",
              "value": "getAll",
              "description": "Get many channels in a Slack team",
              "action": "Get many channels"
            },
            {
              "name": "History",
              "value": "history",
              "description": "Get a conversation's history of messages and events",
              "action": "Get the history of a channel"
            },
            {
              "name": "Invite",
              "value": "invite",
              "description": "Invite a user to a channel",
              "action": "Invite a user to a channel"
            },
            {
              "name": "Join",
              "value": "join",
              "description": "Joins an existing conversation",
              "action": "Join a channel"
            },
            {
              "name": "Kick",
              "value": "kick",
              "description": "Removes a user from a channel",
              "action": "Kick a user from a channel"
            },
            {
              "name": "Leave",
              "value": "leave",
              "description": "Leaves a conversation",
              "action": "Leave a channel"
            },
            {
              "name": "Member",
              "value": "member",
              "description": "List members of a conversation",
              "action": "Get members of a channel"
            },
            {
              "name": "Open",
              "value": "open",
              "description": "Opens or resumes a direct message or multi-person direct message",
              "action": "Open a channel"
            },
            {
              "name": "Rename",
              "value": "rename",
              "description": "Renames a conversation",
              "action": "Rename a channel"
            },
            {
              "name": "Replies",
              "value": "replies",
              "description": "Get a thread of messages posted to a channel",
              "action": "Get a thread of messages posted to a channel"
            },
            {
              "name": "Set Purpose",
              "value": "setPurpose",
              "description": "Sets the purpose for a conversation",
              "action": "Set the purpose of a channel"
            },
            {
              "name": "Set Topic",
              "value": "setTopic",
              "description": "Sets the topic for a conversation",
              "action": "Set the topic of a channel"
            },
            {
              "name": "Unarchive",
              "value": "unarchive",
              "description": "Unarchives a conversation",
              "action": "Unarchive a channel"
            },
            {
              "name": "Custom API Call",
              "value": "__CUSTOM_API_CALL__"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "archive"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "default": "",
            "required": true,
            "description": "The name of the channel to archive. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "close"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "default": "",
            "required": true,
            "description": "The name of the channel to close. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel",
            "name": "channelId",
            "type": "string",
            "default": "",
            "placeholder": "Channel name",
            "displayOptions": {
              "show": {
                "operation": [
                  "create"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "required": true,
            "description": "The name of the channel to create"
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Additional Fields",
            "name": "additionalFields",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ],
                "operation": [
                  "create"
                ]
              }
            },
            "options": [
              {
                "displayName": "Is Private",
                "name": "isPrivate",
                "type": "boolean",
                "default": false,
                "description": "Whether to create a private channel instead of a public one"
              }
            ]
          },
          "property_name": "additionalFields",
          "property_type": [
            {
              "displayName": "Is Private",
              "name": "isPrivate",
              "type": "boolean",
              "default": false,
              "description": "Whether to create a private channel instead of a public one"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "default": "",
            "displayOptions": {
              "show": {
                "operation": [
                  "invite"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "required": true,
            "description": "The ID of the channel to invite user to. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "User Names or IDs",
            "name": "userIds",
            "type": "multiOptions",
            "typeOptions": {
              "loadOptionsMethod": "getUsers"
            },
            "default": [],
            "displayOptions": {
              "show": {
                "operation": [
                  "invite"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "required": true,
            "description": "The ID of the user to invite into channel. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "userIds"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel",
            "name": "channelId",
            "type": "string",
            "default": "",
            "displayOptions": {
              "show": {
                "operation": [
                  "get"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "required": true,
            "description": "Channel ID to learn more about"
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Additional Fields",
            "name": "additionalFields",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ],
                "operation": [
                  "get"
                ]
              }
            },
            "options": [
              {
                "displayName": "Include Num of Members",
                "name": "includeNumMembers",
                "type": "boolean",
                "default": false
              }
            ]
          },
          "property_name": "additionalFields",
          "property_type": [
            {
              "displayName": "Include Num of Members",
              "name": "includeNumMembers",
              "type": "boolean",
              "default": false
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "default": "",
            "placeholder": "Channel name",
            "displayOptions": {
              "show": {
                "operation": [
                  "kick"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "required": true,
            "description": "The name of the channel to create. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "User Name or ID",
            "name": "userId",
            "type": "options",
            "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>",
            "typeOptions": {
              "loadOptionsMethod": "getUsers"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "kick"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "default": ""
          },
          "property_name": "userId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "default": "",
            "placeholder": "Channel name",
            "displayOptions": {
              "show": {
                "operation": [
                  "join"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "required": true
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Return All",
            "name": "returnAll",
            "type": "boolean",
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ],
                "operation": [
                  "getAll"
                ]
              }
            },
            "default": false,
            "description": "Whether to return all results or only up to a given limit"
          },
          "property_name": "returnAll"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Limit",
            "name": "limit",
            "type": "number",
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ],
                "operation": [
                  "getAll"
                ],
                "returnAll": [
                  false
                ]
              }
            },
            "typeOptions": {
              "minValue": 1,
              "maxValue": 100
            },
            "default": 50,
            "description": "Max number of results to return"
          },
          "property_name": "limit"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Filters",
            "name": "filters",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ],
                "operation": [
                  "getAll"
                ]
              }
            },
            "options": [
              {
                "displayName": "Exclude Archived",
                "name": "excludeArchived",
                "type": "boolean",
                "default": false,
                "description": "Whether to exclude archived channels from the list"
              },
              {
                "displayName": "Types",
                "name": "types",
                "type": "multiOptions",
                "options": [
                  {
                    "name": "Public Channel",
                    "value": "public_channel"
                  },
                  {
                    "name": "Private Channel",
                    "value": "private_channel"
                  },
                  {
                    "name": "mpim",
                    "value": "mpim"
                  },
                  {
                    "name": "im",
                    "value": "im"
                  }
                ],
                "default": [
                  "public_channel"
                ],
                "description": "Mix and match channel types"
              }
            ]
          },
          "property_name": "filters",
          "property_type": [
            {
              "displayName": "Exclude Archived",
              "name": "excludeArchived",
              "type": "boolean",
              "default": false,
              "description": "Whether to exclude archived channels from the list"
            },
            {
              "displayName": "Types",
              "name": "types",
              "type": "multiOptions",
              "options": [
                {
                  "name": "Public Channel",
                  "value": "public_channel"
                },
                {
                  "name": "Private Channel",
                  "value": "private_channel"
                },
                {
                  "name": "mpim",
                  "value": "mpim"
                },
                {
                  "name": "im",
                  "value": "im"
                }
              ],
              "default": [
                "public_channel"
              ],
              "description": "Mix and match channel types"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "default": "",
            "placeholder": "Channel name",
            "displayOptions": {
              "show": {
                "operation": [
                  "history"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "required": true,
            "description": "The name of the channel to create. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Return All",
            "name": "returnAll",
            "type": "boolean",
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ],
                "operation": [
                  "history"
                ]
              }
            },
            "default": false,
            "description": "Whether to return all results or only up to a given limit"
          },
          "property_name": "returnAll"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Limit",
            "name": "limit",
            "type": "number",
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ],
                "operation": [
                  "history"
                ],
                "returnAll": [
                  false
                ]
              }
            },
            "typeOptions": {
              "minValue": 1,
              "maxValue": 100
            },
            "default": 50,
            "description": "Max number of results to return"
          },
          "property_name": "limit"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Filters",
            "name": "filters",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ],
                "operation": [
                  "history"
                ]
              }
            },
            "options": [
              {
                "displayName": "Inclusive",
                "name": "inclusive",
                "type": "boolean",
                "default": false,
                "description": "Whether to include messages with latest or oldest timestamp in results only when either timestamp is specified"
              },
              {
                "displayName": "Latest",
                "name": "latest",
                "type": "dateTime",
                "default": "",
                "description": "End of time range of messages to include in results"
              },
              {
                "displayName": "Oldest",
                "name": "oldest",
                "type": "dateTime",
                "default": "",
                "description": "Start of time range of messages to include in results"
              }
            ]
          },
          "property_name": "filters",
          "property_type": [
            {
              "displayName": "Inclusive",
              "name": "inclusive",
              "type": "boolean",
              "default": false,
              "description": "Whether to include messages with latest or oldest timestamp in results only when either timestamp is specified"
            },
            {
              "displayName": "Latest",
              "name": "latest",
              "type": "dateTime",
              "default": "",
              "description": "End of time range of messages to include in results"
            },
            {
              "displayName": "Oldest",
              "name": "oldest",
              "type": "dateTime",
              "default": "",
              "description": "Start of time range of messages to include in results"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "leave"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "default": "",
            "required": true,
            "description": "The name of the channel to leave. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "default": "",
            "displayOptions": {
              "show": {
                "operation": [
                  "member"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "required": true
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Return All",
            "name": "returnAll",
            "type": "boolean",
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ],
                "operation": [
                  "member"
                ]
              }
            },
            "default": false,
            "description": "Whether to return all results or only up to a given limit"
          },
          "property_name": "returnAll"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Limit",
            "name": "limit",
            "type": "number",
            "typeOptions": {
              "minValue": 1
            },
            "description": "Max number of results to return",
            "default": 100,
            "placeholder": "Limit",
            "displayOptions": {
              "show": {
                "operation": [
                  "member"
                ],
                "resource": [
                  "channel"
                ],
                "returnAll": [
                  false
                ]
              }
            }
          },
          "property_name": "limit"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Resolve Data",
            "name": "resolveData",
            "type": "boolean",
            "default": false,
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ],
                "operation": [
                  "member"
                ]
              }
            },
            "description": "Whether to resolve the data automatically. By default the response only contain the ID to resource."
          },
          "property_name": "resolveData"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Options",
            "name": "options",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ],
                "operation": [
                  "open"
                ]
              }
            },
            "options": [
              {
                "displayName": "Channel ID",
                "name": "channelId",
                "type": "string",
                "default": "",
                "description": "Resume a conversation by supplying an im or mpim's ID. Or provide the users field instead."
              },
              {
                "displayName": "Return IM",
                "name": "returnIm",
                "type": "boolean",
                "default": false,
                "description": "Whether you want the full IM channel definition in the response"
              },
              {
                "displayName": "User Names or IDs",
                "name": "users",
                "type": "multiOptions",
                "typeOptions": {
                  "loadOptionsMethod": "getUsers"
                },
                "default": [],
                "description": "If only one user is included, this creates a 1:1 DM. The ordering of the users is preserved whenever a multi-person direct message is returned. Supply a channel when not supplying users. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
              }
            ]
          },
          "property_name": "options",
          "property_type": [
            {
              "displayName": "Channel ID",
              "name": "channelId",
              "type": "string",
              "default": "",
              "description": "Resume a conversation by supplying an im or mpim's ID. Or provide the users field instead."
            },
            {
              "displayName": "Return IM",
              "name": "returnIm",
              "type": "boolean",
              "default": false,
              "description": "Whether you want the full IM channel definition in the response"
            },
            {
              "displayName": "User Names or IDs",
              "name": "users",
              "type": "multiOptions",
              "typeOptions": {
                "loadOptionsMethod": "getUsers"
              },
              "default": [],
              "description": "If only one user is included, this creates a 1:1 DM. The ordering of the users is preserved whenever a multi-person direct message is returned. Supply a channel when not supplying users. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "rename"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "default": "",
            "required": true,
            "description": "The name of the channel to rename. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Name",
            "name": "name",
            "type": "string",
            "displayOptions": {
              "show": {
                "operation": [
                  "rename"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "default": "",
            "required": true,
            "description": "New name for conversation"
          },
          "property_name": "name"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "default": "",
            "placeholder": "Channel name",
            "displayOptions": {
              "show": {
                "operation": [
                  "replies"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "required": true,
            "description": "The name of the channel to create. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "TS",
            "name": "ts",
            "type": "string",
            "default": "",
            "displayOptions": {
              "show": {
                "operation": [
                  "replies"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "required": true,
            "description": "Unique identifier of a thread's parent message"
          },
          "property_name": "ts"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Return All",
            "name": "returnAll",
            "type": "boolean",
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ],
                "operation": [
                  "replies"
                ]
              }
            },
            "default": false,
            "description": "Whether to return all results or only up to a given limit"
          },
          "property_name": "returnAll"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Limit",
            "name": "limit",
            "type": "number",
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ],
                "operation": [
                  "replies"
                ],
                "returnAll": [
                  false
                ]
              }
            },
            "typeOptions": {
              "minValue": 1,
              "maxValue": 100
            },
            "default": 50,
            "description": "Max number of results to return"
          },
          "property_name": "limit"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Filters",
            "name": "filters",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "channel"
                ],
                "operation": [
                  "replies"
                ]
              }
            },
            "options": [
              {
                "displayName": "Inclusive",
                "name": "inclusive",
                "type": "boolean",
                "default": false,
                "description": "Whether to include messages with latest or oldest timestamp in results only when either timestamp is specified"
              },
              {
                "displayName": "Latest",
                "name": "latest",
                "type": "string",
                "default": "",
                "description": "End of time range of messages to include in results"
              },
              {
                "displayName": "Oldest",
                "name": "oldest",
                "type": "string",
                "default": "",
                "description": "Start of time range of messages to include in results"
              }
            ]
          },
          "property_name": "filters",
          "property_type": [
            {
              "displayName": "Inclusive",
              "name": "inclusive",
              "type": "boolean",
              "default": false,
              "description": "Whether to include messages with latest or oldest timestamp in results only when either timestamp is specified"
            },
            {
              "displayName": "Latest",
              "name": "latest",
              "type": "string",
              "default": "",
              "description": "End of time range of messages to include in results"
            },
            {
              "displayName": "Oldest",
              "name": "oldest",
              "type": "string",
              "default": "",
              "description": "Start of time range of messages to include in results"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "setPurpose"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "default": "",
            "required": true,
            "description": "Conversation to set the purpose of. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Purpose",
            "name": "purpose",
            "type": "string",
            "displayOptions": {
              "show": {
                "operation": [
                  "setPurpose"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "default": "",
            "required": true,
            "description": "A new, specialer purpose"
          },
          "property_name": "purpose"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "setTopic"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "default": "",
            "required": true,
            "description": "Conversation to set the topic of. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Topic",
            "name": "topic",
            "type": "string",
            "displayOptions": {
              "show": {
                "operation": [
                  "setTopic"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "default": "",
            "required": true,
            "description": "The new topic string. Does not support formatting or linkification."
          },
          "property_name": "topic"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "unarchive"
                ],
                "resource": [
                  "channel"
                ]
              }
            },
            "default": "",
            "required": true,
            "description": "The ID of the channel to unarchive. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "message"
                ]
              }
            },
            "options": [
              {
                "name": "Delete",
                "value": "delete",
                "description": "Deletes a message",
                "action": "Delete a message"
              },
              {
                "name": "Get Permalink",
                "value": "getPermalink",
                "description": "Get Permanent Link of a message",
                "action": "Get a message permalink"
              },
              {
                "name": "Post",
                "value": "post",
                "description": "Post a message into a channel",
                "action": "Post a message"
              },
              {
                "name": "Post (Ephemeral)",
                "value": "postEphemeral",
                "description": "Post an ephemeral message to a user in channel",
                "action": "Post an ephemeral message"
              },
              {
                "name": "Update",
                "value": "update",
                "description": "Updates a message",
                "action": "Update a message"
              },
              {
                "name": "Custom API Call",
                "value": "__CUSTOM_API_CALL__"
              }
            ],
            "default": "post"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Delete",
              "value": "delete",
              "description": "Deletes a message",
              "action": "Delete a message"
            },
            {
              "name": "Get Permalink",
              "value": "getPermalink",
              "description": "Get Permanent Link of a message",
              "action": "Get a message permalink"
            },
            {
              "name": "Post",
              "value": "post",
              "description": "Post a message into a channel",
              "action": "Post a message"
            },
            {
              "name": "Post (Ephemeral)",
              "value": "postEphemeral",
              "description": "Post an ephemeral message to a user in channel",
              "action": "Post an ephemeral message"
            },
            {
              "name": "Update",
              "value": "update",
              "description": "Updates a message",
              "action": "Update a message"
            },
            {
              "name": "Custom API Call",
              "value": "__CUSTOM_API_CALL__"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "required": true,
            "default": "",
            "displayOptions": {
              "show": {
                "resource": [
                  "message"
                ],
                "operation": [
                  "getPermalink"
                ]
              }
            },
            "description": "Channel containing the message. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Timestamp",
            "name": "timestamp",
            "type": "string",
            "required": true,
            "default": "",
            "displayOptions": {
              "show": {
                "resource": [
                  "message"
                ],
                "operation": [
                  "getPermalink"
                ]
              }
            },
            "description": "Timestamp of the message to get permanent link"
          },
          "property_name": "timestamp"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel",
            "name": "channel",
            "type": "string",
            "default": "",
            "placeholder": "Channel name",
            "displayOptions": {
              "show": {
                "operation": [
                  "post",
                  "postEphemeral"
                ],
                "resource": [
                  "message"
                ]
              }
            },
            "required": true,
            "description": "The channel to send the message to"
          },
          "property_name": "channel"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "User",
            "name": "user",
            "type": "string",
            "default": "",
            "placeholder": "User ID",
            "displayOptions": {
              "show": {
                "operation": [
                  "postEphemeral"
                ],
                "resource": [
                  "message"
                ]
              }
            },
            "required": true,
            "description": "The user ID to send the message to"
          },
          "property_name": "user"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Text",
            "name": "text",
            "type": "string",
            "typeOptions": {
              "alwaysOpenEditWindow": true
            },
            "default": "",
            "displayOptions": {
              "show": {
                "operation": [
                  "post",
                  "postEphemeral"
                ],
                "resource": [
                  "message"
                ]
              }
            },
            "description": "The text to send"
          },
          "property_name": "text"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "JSON Parameters",
            "name": "jsonParameters",
            "type": "boolean",
            "default": false,
            "displayOptions": {
              "show": {
                "operation": [
                  "post",
                  "postEphemeral"
                ],
                "resource": [
                  "message"
                ]
              }
            }
          },
          "property_name": "jsonParameters"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Options",
            "name": "otherOptions",
            "type": "collection",
            "displayOptions": {
              "show": {
                "operation": [
                  "post",
                  "postEphemeral"
                ],
                "resource": [
                  "message"
                ]
              }
            },
            "default": {},
            "description": "Other options to set",
            "placeholder": "Add options",
            "options": [
              {
                "displayName": "Icon Emoji",
                "name": "icon_emoji",
                "type": "string",
                "default": "",
                "description": "Emoji to use as the icon for this message. Overrides icon_url."
              },
              {
                "displayName": "Icon URL",
                "name": "icon_url",
                "type": "string",
                "default": "",
                "description": "URL to an image to use as the icon for this message"
              },
              {
                "displayName": "Link Names",
                "name": "link_names",
                "type": "boolean",
                "default": false,
                "description": "Whether to find and link channel names and usernames"
              },
              {
                "displayName": "Make Reply",
                "name": "thread_ts",
                "type": "string",
                "default": "",
                "description": "Provide another message's ts value to make this message a reply"
              },
              {
                "displayName": "Markdown",
                "name": "mrkdwn",
                "type": "boolean",
                "default": true,
                "description": "Whether to use Slack Markdown parsing"
              },
              {
                "displayName": "Reply Broadcast",
                "name": "reply_broadcast",
                "type": "boolean",
                "default": false,
                "description": "Whether the reply should be made visible to everyone in the channel or conversation. Use in conjunction with thread_ts."
              },
              {
                "displayName": "Unfurl Links",
                "name": "unfurl_links",
                "type": "boolean",
                "default": false,
                "description": "Whether to enable unfurling of primarily text-based content"
              },
              {
                "displayName": "Unfurl Media",
                "name": "unfurl_media",
                "type": "boolean",
                "default": true,
                "description": "Whether to disable unfurling of media content"
              },
              {
                "displayName": "Send as User",
                "name": "sendAsUser",
                "type": "string",
                "displayOptions": {
                  "show": {
                    "/authentication": [
                      "accessToken"
                    ]
                  }
                },
                "default": "",
                "description": "The message will be sent from this username (i.e. as if this individual sent the message)."
              }
            ]
          },
          "property_name": "otherOptions",
          "property_type": [
            {
              "displayName": "Icon Emoji",
              "name": "icon_emoji",
              "type": "string",
              "default": "",
              "description": "Emoji to use as the icon for this message. Overrides icon_url."
            },
            {
              "displayName": "Icon URL",
              "name": "icon_url",
              "type": "string",
              "default": "",
              "description": "URL to an image to use as the icon for this message"
            },
            {
              "displayName": "Link Names",
              "name": "link_names",
              "type": "boolean",
              "default": false,
              "description": "Whether to find and link channel names and usernames"
            },
            {
              "displayName": "Make Reply",
              "name": "thread_ts",
              "type": "string",
              "default": "",
              "description": "Provide another message's ts value to make this message a reply"
            },
            {
              "displayName": "Markdown",
              "name": "mrkdwn",
              "type": "boolean",
              "default": true,
              "description": "Whether to use Slack Markdown parsing"
            },
            {
              "displayName": "Reply Broadcast",
              "name": "reply_broadcast",
              "type": "boolean",
              "default": false,
              "description": "Whether the reply should be made visible to everyone in the channel or conversation. Use in conjunction with thread_ts."
            },
            {
              "displayName": "Unfurl Links",
              "name": "unfurl_links",
              "type": "boolean",
              "default": false,
              "description": "Whether to enable unfurling of primarily text-based content"
            },
            {
              "displayName": "Unfurl Media",
              "name": "unfurl_media",
              "type": "boolean",
              "default": true,
              "description": "Whether to disable unfurling of media content"
            },
            {
              "displayName": "Send as User",
              "name": "sendAsUser",
              "type": "string",
              "displayOptions": {
                "show": {
                  "/authentication": [
                    "accessToken"
                  ]
                }
              },
              "default": "",
              "description": "The message will be sent from this username (i.e. as if this individual sent the message)."
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Attachments",
            "name": "attachments",
            "type": "collection",
            "typeOptions": {
              "multipleValues": true,
              "multipleValueButtonText": "Add attachment"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "post",
                  "postEphemeral"
                ],
                "resource": [
                  "message"
                ]
              }
            },
            "default": {},
            "description": "The attachment to add",
            "placeholder": "Add attachment item",
            "options": [
              {
                "displayName": "Fallback Text",
                "name": "fallback",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Required plain-text summary of the attachment"
              },
              {
                "displayName": "Text",
                "name": "text",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Text to send"
              },
              {
                "displayName": "Title",
                "name": "title",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Title of the message"
              },
              {
                "displayName": "Title Link",
                "name": "title_link",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Link of the title"
              },
              {
                "displayName": "Color",
                "name": "color",
                "type": "color",
                "default": "#ff0000",
                "description": "Color of the line left of text"
              },
              {
                "displayName": "Pretext",
                "name": "pretext",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Text which appears before the message block"
              },
              {
                "displayName": "Author Name",
                "name": "author_name",
                "type": "string",
                "default": "",
                "description": "Name that should appear"
              },
              {
                "displayName": "Author Link",
                "name": "author_link",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Link for the author"
              },
              {
                "displayName": "Author Icon",
                "name": "author_icon",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Icon which should appear for the user"
              },
              {
                "displayName": "Image URL",
                "name": "image_url",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "URL of image"
              },
              {
                "displayName": "Thumbnail URL",
                "name": "thumb_url",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "URL of thumbnail"
              },
              {
                "displayName": "Footer",
                "name": "footer",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Text of footer to add"
              },
              {
                "displayName": "Footer Icon",
                "name": "footer_icon",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Icon which should appear next to footer"
              },
              {
                "displayName": "Timestamp",
                "name": "ts",
                "type": "dateTime",
                "default": "",
                "description": "Time message relates to"
              },
              {
                "displayName": "Fields",
                "name": "fields",
                "placeholder": "Add Fields",
                "description": "Fields to add to message",
                "type": "fixedCollection",
                "typeOptions": {
                  "multipleValues": true
                },
                "default": {},
                "options": [
                  {
                    "name": "item",
                    "displayName": "Item",
                    "values": [
                      {
                        "displayName": "Title",
                        "name": "title",
                        "type": "string",
                        "default": "",
                        "description": "Title of the item"
                      },
                      {
                        "displayName": "Value",
                        "name": "value",
                        "type": "string",
                        "default": "",
                        "description": "Value of the item"
                      },
                      {
                        "displayName": "Short",
                        "name": "short",
                        "type": "boolean",
                        "default": true,
                        "description": "Whether items can be displayed next to each other"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "property_name": "attachments",
          "property_type": [
            {
              "displayName": "Fallback Text",
              "name": "fallback",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Required plain-text summary of the attachment"
            },
            {
              "displayName": "Text",
              "name": "text",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Text to send"
            },
            {
              "displayName": "Title",
              "name": "title",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Title of the message"
            },
            {
              "displayName": "Title Link",
              "name": "title_link",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Link of the title"
            },
            {
              "displayName": "Color",
              "name": "color",
              "type": "color",
              "default": "#ff0000",
              "description": "Color of the line left of text"
            },
            {
              "displayName": "Pretext",
              "name": "pretext",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Text which appears before the message block"
            },
            {
              "displayName": "Author Name",
              "name": "author_name",
              "type": "string",
              "default": "",
              "description": "Name that should appear"
            },
            {
              "displayName": "Author Link",
              "name": "author_link",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Link for the author"
            },
            {
              "displayName": "Author Icon",
              "name": "author_icon",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Icon which should appear for the user"
            },
            {
              "displayName": "Image URL",
              "name": "image_url",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "URL of image"
            },
            {
              "displayName": "Thumbnail URL",
              "name": "thumb_url",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "URL of thumbnail"
            },
            {
              "displayName": "Footer",
              "name": "footer",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Text of footer to add"
            },
            {
              "displayName": "Footer Icon",
              "name": "footer_icon",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Icon which should appear next to footer"
            },
            {
              "displayName": "Timestamp",
              "name": "ts",
              "type": "dateTime",
              "default": "",
              "description": "Time message relates to"
            },
            {
              "displayName": "Fields",
              "name": "fields",
              "placeholder": "Add Fields",
              "description": "Fields to add to message",
              "type": "fixedCollection",
              "typeOptions": {
                "multipleValues": true
              },
              "default": {},
              "options": [
                {
                  "name": "item",
                  "displayName": "Item",
                  "values": [
                    {
                      "displayName": "Title",
                      "name": "title",
                      "type": "string",
                      "default": "",
                      "description": "Title of the item"
                    },
                    {
                      "displayName": "Value",
                      "name": "value",
                      "type": "string",
                      "default": "",
                      "description": "Value of the item"
                    },
                    {
                      "displayName": "Short",
                      "name": "short",
                      "type": "boolean",
                      "default": true,
                      "description": "Whether items can be displayed next to each other"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "required": true,
            "default": "",
            "displayOptions": {
              "show": {
                "resource": [
                  "message"
                ],
                "operation": [
                  "update"
                ]
              }
            },
            "description": "Channel containing the message to be updated. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Text",
            "name": "text",
            "type": "string",
            "default": "",
            "displayOptions": {
              "show": {
                "resource": [
                  "message"
                ],
                "operation": [
                  "update"
                ]
              }
            },
            "description": "New text for the message, using the default formatting rules. It's not required when presenting attachments."
          },
          "property_name": "text"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "TS",
            "name": "ts",
            "type": "string",
            "required": true,
            "default": "",
            "displayOptions": {
              "show": {
                "resource": [
                  "message"
                ],
                "operation": [
                  "update"
                ]
              }
            },
            "description": "Timestamp of the message to be updated"
          },
          "property_name": "ts"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "JSON Parameters",
            "name": "jsonParameters",
            "type": "boolean",
            "default": false,
            "displayOptions": {
              "show": {
                "operation": [
                  "update"
                ],
                "resource": [
                  "message"
                ]
              }
            }
          },
          "property_name": "jsonParameters"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Update Fields",
            "name": "updateFields",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "message"
                ],
                "operation": [
                  "update"
                ]
              }
            },
            "options": [
              {
                "displayName": "Link Names",
                "name": "link_names",
                "type": "boolean",
                "default": false,
                "description": "Whether to find and link channel names and usernames"
              },
              {
                "displayName": "Parse",
                "name": "parse",
                "type": "options",
                "options": [
                  {
                    "name": "Client",
                    "value": "client"
                  },
                  {
                    "name": "Full",
                    "value": "full"
                  },
                  {
                    "name": "None",
                    "value": "none"
                  }
                ],
                "default": "client",
                "description": "Change how messages are treated"
              }
            ]
          },
          "property_name": "updateFields",
          "property_type": [
            {
              "displayName": "Link Names",
              "name": "link_names",
              "type": "boolean",
              "default": false,
              "description": "Whether to find and link channel names and usernames"
            },
            {
              "displayName": "Parse",
              "name": "parse",
              "type": "options",
              "options": [
                {
                  "name": "Client",
                  "value": "client"
                },
                {
                  "name": "Full",
                  "value": "full"
                },
                {
                  "name": "None",
                  "value": "none"
                }
              ],
              "default": "client",
              "description": "Change how messages are treated"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Attachments",
            "name": "attachmentsJson",
            "type": "json",
            "default": "",
            "typeOptions": {
              "alwaysOpenEditWindow": true
            },
            "displayOptions": {
              "show": {
                "resource": [
                  "message"
                ],
                "operation": [
                  "update"
                ],
                "jsonParameters": [
                  true
                ]
              }
            },
            "description": "The attachments to add"
          },
          "property_name": "attachmentsJson"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Blocks",
            "name": "blocksJson",
            "type": "json",
            "default": "",
            "typeOptions": {
              "alwaysOpenEditWindow": true
            },
            "displayOptions": {
              "show": {
                "resource": [
                  "message"
                ],
                "operation": [
                  "update"
                ],
                "jsonParameters": [
                  true
                ]
              }
            },
            "description": "The blocks to add"
          },
          "property_name": "blocksJson"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Blocks",
            "name": "blocksUi",
            "type": "fixedCollection",
            "typeOptions": {
              "multipleValues": true,
              "multipleValueButtonText": "Add Block"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "post"
                ],
                "resource": [
                  "message"
                ],
                "jsonParameters": [
                  false
                ]
              }
            },
            "default": {},
            "description": "The blocks to add",
            "placeholder": "Add Block",
            "options": [
              {
                "name": "blocksValues",
                "displayName": "Block",
                "values": [
                  {
                    "displayName": "Type",
                    "name": "type",
                    "type": "options",
                    "options": [
                      {
                        "name": "Actions",
                        "value": "actions"
                      },
                      {
                        "name": "Section",
                        "value": "section"
                      }
                    ],
                    "default": "actions"
                  },
                  {
                    "displayName": "Block ID",
                    "name": "blockId",
                    "type": "string",
                    "displayOptions": {
                      "show": {
                        "type": [
                          "actions"
                        ]
                      }
                    },
                    "default": "",
                    "description": "A string acting as a unique identifier for a block. You can use this block_id when you receive an interaction payload to identify the source of the action. If not specified, a block_id will be generated. Maximum length for this field is 255 characters."
                  },
                  {
                    "displayName": "Elements",
                    "name": "elementsUi",
                    "placeholder": "Add Element",
                    "type": "fixedCollection",
                    "typeOptions": {
                      "multipleValues": true
                    },
                    "displayOptions": {
                      "show": {
                        "type": [
                          "actions"
                        ]
                      }
                    },
                    "default": {},
                    "options": [
                      {
                        "name": "elementsValues",
                        "displayName": "Element",
                        "values": [
                          {
                            "displayName": "Type",
                            "name": "type",
                            "type": "options",
                            "options": [
                              {
                                "name": "Button",
                                "value": "button"
                              }
                            ],
                            "default": "button",
                            "description": "The type of element"
                          },
                          {
                            "displayName": "Text",
                            "name": "text",
                            "type": "string",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "button"
                                ]
                              }
                            },
                            "default": "",
                            "description": "The text for the block"
                          },
                          {
                            "displayName": "Emoji",
                            "name": "emoji",
                            "type": "boolean",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "button"
                                ]
                              }
                            },
                            "default": false,
                            "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                          },
                          {
                            "displayName": "Action ID",
                            "name": "actionId",
                            "type": "string",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "button"
                                ]
                              }
                            },
                            "default": "",
                            "description": "An identifier for this action. You can use this when you receive an interaction payload to identify the source of the action. Should be unique among all other action_ids used elsewhere by your app."
                          },
                          {
                            "displayName": "URL",
                            "name": "url",
                            "type": "string",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "button"
                                ]
                              }
                            },
                            "default": "",
                            "description": "A URL to load in the user's browser when the button is clicked. Maximum length for this field is 3000 characters. If you're using URL, you'll still receive an interaction payload and will need to send an acknowledgement response."
                          },
                          {
                            "displayName": "Value",
                            "name": "value",
                            "type": "string",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "button"
                                ]
                              }
                            },
                            "default": "",
                            "description": "The value to send along with the interaction payload"
                          },
                          {
                            "displayName": "Style",
                            "name": "style",
                            "type": "options",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "button"
                                ]
                              }
                            },
                            "options": [
                              {
                                "name": "Danger",
                                "value": "danger"
                              },
                              {
                                "name": "Default",
                                "value": "default"
                              },
                              {
                                "name": "Primary",
                                "value": "primary"
                              }
                            ],
                            "default": "default",
                            "description": "Decorates buttons with alternative visual color schemes"
                          },
                          {
                            "displayName": "Confirm",
                            "name": "confirmUi",
                            "placeholder": "Add Confirm",
                            "type": "fixedCollection",
                            "typeOptions": {
                              "multipleValues": false
                            },
                            "default": {},
                            "options": [
                              {
                                "name": "confirmValue",
                                "displayName": "Confirm",
                                "values": [
                                  {
                                    "displayName": "Title",
                                    "name": "titleUi",
                                    "placeholder": "Add Title",
                                    "type": "fixedCollection",
                                    "typeOptions": {
                                      "multipleValues": false
                                    },
                                    "default": {},
                                    "options": [
                                      {
                                        "name": "titleValue",
                                        "displayName": "Title",
                                        "values": [
                                          {
                                            "displayName": "Text",
                                            "name": "text",
                                            "type": "string",
                                            "default": "",
                                            "description": "Text of the title"
                                          },
                                          {
                                            "displayName": "Emoji",
                                            "name": "emoji",
                                            "type": "boolean",
                                            "default": false,
                                            "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                          }
                                        ]
                                      }
                                    ],
                                    "description": "Defines the dialog's title"
                                  },
                                  {
                                    "displayName": "Text",
                                    "name": "textUi",
                                    "placeholder": "Add Text",
                                    "type": "fixedCollection",
                                    "typeOptions": {
                                      "multipleValues": false
                                    },
                                    "default": {},
                                    "options": [
                                      {
                                        "name": "textValue",
                                        "displayName": "Text",
                                        "values": [
                                          {
                                            "displayName": "Text",
                                            "name": "text",
                                            "type": "string",
                                            "default": "",
                                            "description": "The text for the block"
                                          },
                                          {
                                            "displayName": "Emoji",
                                            "name": "emoji",
                                            "type": "boolean",
                                            "default": false,
                                            "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                          }
                                        ]
                                      }
                                    ],
                                    "description": "Defines the explanatory text that appears in the confirm dialog"
                                  },
                                  {
                                    "displayName": "Confirm",
                                    "name": "confirmTextUi",
                                    "placeholder": "Add Confirm",
                                    "type": "fixedCollection",
                                    "typeOptions": {
                                      "multipleValues": false
                                    },
                                    "default": {},
                                    "options": [
                                      {
                                        "name": "confirmValue",
                                        "displayName": "Confirm",
                                        "values": [
                                          {
                                            "displayName": "Text",
                                            "name": "text",
                                            "type": "string",
                                            "default": "",
                                            "description": "Defines the explanatory text that appears in the confirm dialog"
                                          },
                                          {
                                            "displayName": "Emoji",
                                            "name": "emoji",
                                            "type": "boolean",
                                            "default": false,
                                            "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                          }
                                        ]
                                      }
                                    ],
                                    "description": "Defines the text of the button that confirms the action"
                                  },
                                  {
                                    "displayName": "Deny",
                                    "name": "denyUi",
                                    "placeholder": "Add Deny",
                                    "type": "fixedCollection",
                                    "typeOptions": {
                                      "multipleValues": false
                                    },
                                    "default": {},
                                    "options": [
                                      {
                                        "name": "denyValue",
                                        "displayName": "Deny",
                                        "values": [
                                          {
                                            "displayName": "Text",
                                            "name": "text",
                                            "type": "string",
                                            "default": "",
                                            "description": "Defines the text of the button that cancels the action"
                                          },
                                          {
                                            "displayName": "Emoji",
                                            "name": "emoji",
                                            "type": "boolean",
                                            "default": false,
                                            "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                          }
                                        ]
                                      }
                                    ],
                                    "description": "Defines the text of the button that cancels the action"
                                  },
                                  {
                                    "displayName": "Style",
                                    "name": "style",
                                    "type": "options",
                                    "options": [
                                      {
                                        "name": "Danger",
                                        "value": "danger"
                                      },
                                      {
                                        "name": "Default",
                                        "value": "default"
                                      },
                                      {
                                        "name": "Primary",
                                        "value": "primary"
                                      }
                                    ],
                                    "default": "default",
                                    "description": "Defines the color scheme applied to the confirm button"
                                  }
                                ]
                              }
                            ],
                            "description": "Defines an optional confirmation dialog after the button is clicked"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "displayName": "Block ID",
                    "name": "blockId",
                    "type": "string",
                    "displayOptions": {
                      "show": {
                        "type": [
                          "section"
                        ]
                      }
                    },
                    "default": "",
                    "description": "A string acting as a unique identifier for a block. You can use this block_id when you receive an interaction payload to identify the source of the action. If not specified, a block_id will be generated. Maximum length for this field is 255 characters."
                  },
                  {
                    "displayName": "Text",
                    "name": "textUi",
                    "placeholder": "Add Text",
                    "type": "fixedCollection",
                    "typeOptions": {
                      "multipleValues": false
                    },
                    "displayOptions": {
                      "show": {
                        "type": [
                          "section"
                        ]
                      }
                    },
                    "default": {},
                    "options": [
                      {
                        "name": "textValue",
                        "displayName": "Text",
                        "values": [
                          {
                            "displayName": "Type",
                            "name": "type",
                            "type": "options",
                            "options": [
                              {
                                "name": "Markdown",
                                "value": "mrkwdn"
                              },
                              {
                                "name": "Plain Text",
                                "value": "plainText"
                              }
                            ],
                            "default": "mrkwdn",
                            "description": "The formatting to use for this text object"
                          },
                          {
                            "displayName": "Text",
                            "name": "text",
                            "type": "string",
                            "default": "",
                            "description": "The text for the block. This field accepts any of the standard text formatting markup when type is mrkdwn."
                          },
                          {
                            "displayName": "Emoji",
                            "name": "emoji",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "plainText"
                                ]
                              }
                            },
                            "type": "boolean",
                            "default": false,
                            "description": "Whether emojis in a text field should be escaped into the colon emoji format. This field is only usable when type is plain_text."
                          },
                          {
                            "displayName": "Verbatim",
                            "name": "verbatim",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "mrkwdn"
                                ]
                              }
                            },
                            "type": "boolean",
                            "default": false,
                            "description": "Whether to set to false (as is default) URLs will be auto-converted into links, conversation names will be link-ified, and certain mentions will be automatically parsed"
                          }
                        ]
                      }
                    ],
                    "description": "Define the text of the button that cancels the action"
                  },
                  {
                    "displayName": "Fields",
                    "name": "fieldsUi",
                    "placeholder": "Add Fields",
                    "type": "fixedCollection",
                    "typeOptions": {
                      "multipleValues": true
                    },
                    "displayOptions": {
                      "show": {
                        "type": [
                          "section"
                        ]
                      }
                    },
                    "default": {},
                    "options": [
                      {
                        "name": "fieldsValues",
                        "displayName": "Text",
                        "values": [
                          {
                            "displayName": "Type",
                            "name": "type",
                            "type": "options",
                            "options": [
                              {
                                "name": "Markdown",
                                "value": "mrkwdn"
                              },
                              {
                                "name": "Plain Text",
                                "value": "plainText"
                              }
                            ],
                            "default": "mrkwdn",
                            "description": "The formatting to use for this text object"
                          },
                          {
                            "displayName": "Text",
                            "name": "text",
                            "type": "string",
                            "default": "",
                            "description": "The text for the block. This field accepts any of the standard text formatting markup when type is mrkdwn."
                          },
                          {
                            "displayName": "Emoji",
                            "name": "emoji",
                            "type": "boolean",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "plainText"
                                ]
                              }
                            },
                            "default": false,
                            "description": "Whether emojis in a text field should be escaped into the colon emoji format. This field is only usable when type is plain_text."
                          },
                          {
                            "displayName": "Verbatim",
                            "name": "verbatim",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "mrkwdn"
                                ]
                              }
                            },
                            "type": "boolean",
                            "default": false,
                            "description": "When set to false (as is default) URLs will be auto-converted into links, conversation names will be link-ified, and certain mentions will be automatically parsed"
                          }
                        ]
                      }
                    ],
                    "description": "An array of text objects. Any text objects included with fields will be rendered in a compact format that allows for 2 columns of side-by-side text. Maximum number of items is 10."
                  },
                  {
                    "displayName": "Accessory",
                    "name": "accessoryUi",
                    "placeholder": "Add Accessory",
                    "type": "fixedCollection",
                    "typeOptions": {
                      "multipleValues": false
                    },
                    "displayOptions": {
                      "show": {
                        "type": [
                          "section"
                        ]
                      }
                    },
                    "default": {},
                    "options": [
                      {
                        "name": "accessoriesValues",
                        "displayName": "Accessory",
                        "values": [
                          {
                            "displayName": "Type",
                            "name": "type",
                            "type": "options",
                            "options": [
                              {
                                "name": "Button",
                                "value": "button"
                              }
                            ],
                            "default": "button",
                            "description": "The type of element"
                          },
                          {
                            "displayName": "Text",
                            "name": "text",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "button"
                                ]
                              }
                            },
                            "type": "string",
                            "default": "",
                            "description": "The text for the block"
                          },
                          {
                            "displayName": "Emoji",
                            "name": "emoji",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "button"
                                ]
                              }
                            },
                            "type": "boolean",
                            "default": false,
                            "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                          },
                          {
                            "displayName": "Action ID",
                            "name": "actionId",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "button"
                                ]
                              }
                            },
                            "type": "string",
                            "default": "",
                            "description": "An identifier for this action. You can use this when you receive an interaction payload to identify the source of the action. Should be unique among all other action_ids used elsewhere by your app."
                          },
                          {
                            "displayName": "URL",
                            "name": "url",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "button"
                                ]
                              }
                            },
                            "type": "string",
                            "default": "",
                            "description": "A URL to load in the user's browser when the button is clicked. Maximum length for this field is 3000 characters. If you're using URL, you'll still receive an interaction payload and will need to send an acknowledgement response."
                          },
                          {
                            "displayName": "Value",
                            "name": "value",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "button"
                                ]
                              }
                            },
                            "type": "string",
                            "default": "",
                            "description": "The value to send along with the interaction payload"
                          },
                          {
                            "displayName": "Style",
                            "name": "style",
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "button"
                                ]
                              }
                            },
                            "type": "options",
                            "options": [
                              {
                                "name": "Danger",
                                "value": "danger"
                              },
                              {
                                "name": "Default",
                                "value": "default"
                              },
                              {
                                "name": "Primary",
                                "value": "primary"
                              }
                            ],
                            "default": "default",
                            "description": "Decorates buttons with alternative visual color schemes"
                          },
                          {
                            "displayName": "Confirm",
                            "name": "confirmUi",
                            "placeholder": "Add Confirm",
                            "type": "fixedCollection",
                            "typeOptions": {
                              "multipleValues": false
                            },
                            "displayOptions": {
                              "show": {
                                "type": [
                                  "button"
                                ]
                              }
                            },
                            "default": {},
                            "options": [
                              {
                                "name": "confirmValue",
                                "displayName": "Confirm",
                                "values": [
                                  {
                                    "displayName": "Title",
                                    "name": "titleUi",
                                    "placeholder": "Add Title",
                                    "type": "fixedCollection",
                                    "typeOptions": {
                                      "multipleValues": false
                                    },
                                    "default": {},
                                    "options": [
                                      {
                                        "name": "titleValue",
                                        "displayName": "Title",
                                        "values": [
                                          {
                                            "displayName": "Text",
                                            "name": "text",
                                            "type": "string",
                                            "default": "",
                                            "description": "Text of the title"
                                          },
                                          {
                                            "displayName": "Emoji",
                                            "name": "emoji",
                                            "type": "boolean",
                                            "default": false,
                                            "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                          }
                                        ]
                                      }
                                    ],
                                    "description": "Defines an optional confirmation dialog after the button is clicked"
                                  },
                                  {
                                    "displayName": "Text",
                                    "name": "textUi",
                                    "placeholder": "Add Text",
                                    "type": "fixedCollection",
                                    "typeOptions": {
                                      "multipleValues": false
                                    },
                                    "default": {},
                                    "options": [
                                      {
                                        "name": "textValue",
                                        "displayName": "Text",
                                        "values": [
                                          {
                                            "displayName": "Text",
                                            "name": "text",
                                            "type": "string",
                                            "default": "",
                                            "description": "The text for the block"
                                          },
                                          {
                                            "displayName": "Emoji",
                                            "name": "emoji",
                                            "type": "boolean",
                                            "default": false,
                                            "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                          }
                                        ]
                                      }
                                    ],
                                    "description": "Defines the explanatory text that appears in the confirm dialog"
                                  },
                                  {
                                    "displayName": "Confirm",
                                    "name": "confirmTextUi",
                                    "placeholder": "Add Confirm",
                                    "type": "fixedCollection",
                                    "typeOptions": {
                                      "multipleValues": false
                                    },
                                    "default": {},
                                    "options": [
                                      {
                                        "name": "confirmValue",
                                        "displayName": "Confirm",
                                        "values": [
                                          {
                                            "displayName": "Text",
                                            "name": "text",
                                            "type": "string",
                                            "default": "",
                                            "description": "Defines the explanatory text that appears in the confirm dialog"
                                          },
                                          {
                                            "displayName": "Emoji",
                                            "name": "emoji",
                                            "type": "boolean",
                                            "default": false,
                                            "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                          }
                                        ]
                                      }
                                    ],
                                    "description": "Defines the explanatory text that appears in the confirm dialog"
                                  },
                                  {
                                    "displayName": "Deny",
                                    "name": "denyUi",
                                    "placeholder": "Add Deny",
                                    "type": "fixedCollection",
                                    "typeOptions": {
                                      "multipleValues": false
                                    },
                                    "default": {},
                                    "options": [
                                      {
                                        "name": "denyValue",
                                        "displayName": "Deny",
                                        "values": [
                                          {
                                            "displayName": "Text",
                                            "name": "text",
                                            "type": "string",
                                            "default": "",
                                            "description": "Define the text of the button that cancels the action"
                                          },
                                          {
                                            "displayName": "Emoji",
                                            "name": "emoji",
                                            "type": "boolean",
                                            "default": false,
                                            "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                          }
                                        ]
                                      }
                                    ],
                                    "description": "Define the text of the button that cancels the action"
                                  },
                                  {
                                    "displayName": "Style",
                                    "name": "style",
                                    "type": "options",
                                    "options": [
                                      {
                                        "name": "Danger",
                                        "value": "danger"
                                      },
                                      {
                                        "name": "Default",
                                        "value": "default"
                                      },
                                      {
                                        "name": "Primary",
                                        "value": "primary"
                                      }
                                    ],
                                    "default": "default",
                                    "description": "Defines the color scheme applied to the confirm button"
                                  }
                                ]
                              }
                            ],
                            "description": "Defines an optional confirmation dialog after the button is clicked"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "property_name": "blocksUi",
          "property_type": [
            {
              "name": "blocksValues",
              "displayName": "Block",
              "values": [
                {
                  "displayName": "Type",
                  "name": "type",
                  "type": "options",
                  "options": [
                    {
                      "name": "Actions",
                      "value": "actions"
                    },
                    {
                      "name": "Section",
                      "value": "section"
                    }
                  ],
                  "default": "actions"
                },
                {
                  "displayName": "Block ID",
                  "name": "blockId",
                  "type": "string",
                  "displayOptions": {
                    "show": {
                      "type": [
                        "actions"
                      ]
                    }
                  },
                  "default": "",
                  "description": "A string acting as a unique identifier for a block. You can use this block_id when you receive an interaction payload to identify the source of the action. If not specified, a block_id will be generated. Maximum length for this field is 255 characters."
                },
                {
                  "displayName": "Elements",
                  "name": "elementsUi",
                  "placeholder": "Add Element",
                  "type": "fixedCollection",
                  "typeOptions": {
                    "multipleValues": true
                  },
                  "displayOptions": {
                    "show": {
                      "type": [
                        "actions"
                      ]
                    }
                  },
                  "default": {},
                  "options": [
                    {
                      "name": "elementsValues",
                      "displayName": "Element",
                      "values": [
                        {
                          "displayName": "Type",
                          "name": "type",
                          "type": "options",
                          "options": [
                            {
                              "name": "Button",
                              "value": "button"
                            }
                          ],
                          "default": "button",
                          "description": "The type of element"
                        },
                        {
                          "displayName": "Text",
                          "name": "text",
                          "type": "string",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "button"
                              ]
                            }
                          },
                          "default": "",
                          "description": "The text for the block"
                        },
                        {
                          "displayName": "Emoji",
                          "name": "emoji",
                          "type": "boolean",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "button"
                              ]
                            }
                          },
                          "default": false,
                          "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                        },
                        {
                          "displayName": "Action ID",
                          "name": "actionId",
                          "type": "string",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "button"
                              ]
                            }
                          },
                          "default": "",
                          "description": "An identifier for this action. You can use this when you receive an interaction payload to identify the source of the action. Should be unique among all other action_ids used elsewhere by your app."
                        },
                        {
                          "displayName": "URL",
                          "name": "url",
                          "type": "string",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "button"
                              ]
                            }
                          },
                          "default": "",
                          "description": "A URL to load in the user's browser when the button is clicked. Maximum length for this field is 3000 characters. If you're using URL, you'll still receive an interaction payload and will need to send an acknowledgement response."
                        },
                        {
                          "displayName": "Value",
                          "name": "value",
                          "type": "string",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "button"
                              ]
                            }
                          },
                          "default": "",
                          "description": "The value to send along with the interaction payload"
                        },
                        {
                          "displayName": "Style",
                          "name": "style",
                          "type": "options",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "button"
                              ]
                            }
                          },
                          "options": [
                            {
                              "name": "Danger",
                              "value": "danger"
                            },
                            {
                              "name": "Default",
                              "value": "default"
                            },
                            {
                              "name": "Primary",
                              "value": "primary"
                            }
                          ],
                          "default": "default",
                          "description": "Decorates buttons with alternative visual color schemes"
                        },
                        {
                          "displayName": "Confirm",
                          "name": "confirmUi",
                          "placeholder": "Add Confirm",
                          "type": "fixedCollection",
                          "typeOptions": {
                            "multipleValues": false
                          },
                          "default": {},
                          "options": [
                            {
                              "name": "confirmValue",
                              "displayName": "Confirm",
                              "values": [
                                {
                                  "displayName": "Title",
                                  "name": "titleUi",
                                  "placeholder": "Add Title",
                                  "type": "fixedCollection",
                                  "typeOptions": {
                                    "multipleValues": false
                                  },
                                  "default": {},
                                  "options": [
                                    {
                                      "name": "titleValue",
                                      "displayName": "Title",
                                      "values": [
                                        {
                                          "displayName": "Text",
                                          "name": "text",
                                          "type": "string",
                                          "default": "",
                                          "description": "Text of the title"
                                        },
                                        {
                                          "displayName": "Emoji",
                                          "name": "emoji",
                                          "type": "boolean",
                                          "default": false,
                                          "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Defines the dialog's title"
                                },
                                {
                                  "displayName": "Text",
                                  "name": "textUi",
                                  "placeholder": "Add Text",
                                  "type": "fixedCollection",
                                  "typeOptions": {
                                    "multipleValues": false
                                  },
                                  "default": {},
                                  "options": [
                                    {
                                      "name": "textValue",
                                      "displayName": "Text",
                                      "values": [
                                        {
                                          "displayName": "Text",
                                          "name": "text",
                                          "type": "string",
                                          "default": "",
                                          "description": "The text for the block"
                                        },
                                        {
                                          "displayName": "Emoji",
                                          "name": "emoji",
                                          "type": "boolean",
                                          "default": false,
                                          "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Defines the explanatory text that appears in the confirm dialog"
                                },
                                {
                                  "displayName": "Confirm",
                                  "name": "confirmTextUi",
                                  "placeholder": "Add Confirm",
                                  "type": "fixedCollection",
                                  "typeOptions": {
                                    "multipleValues": false
                                  },
                                  "default": {},
                                  "options": [
                                    {
                                      "name": "confirmValue",
                                      "displayName": "Confirm",
                                      "values": [
                                        {
                                          "displayName": "Text",
                                          "name": "text",
                                          "type": "string",
                                          "default": "",
                                          "description": "Defines the explanatory text that appears in the confirm dialog"
                                        },
                                        {
                                          "displayName": "Emoji",
                                          "name": "emoji",
                                          "type": "boolean",
                                          "default": false,
                                          "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Defines the text of the button that confirms the action"
                                },
                                {
                                  "displayName": "Deny",
                                  "name": "denyUi",
                                  "placeholder": "Add Deny",
                                  "type": "fixedCollection",
                                  "typeOptions": {
                                    "multipleValues": false
                                  },
                                  "default": {},
                                  "options": [
                                    {
                                      "name": "denyValue",
                                      "displayName": "Deny",
                                      "values": [
                                        {
                                          "displayName": "Text",
                                          "name": "text",
                                          "type": "string",
                                          "default": "",
                                          "description": "Defines the text of the button that cancels the action"
                                        },
                                        {
                                          "displayName": "Emoji",
                                          "name": "emoji",
                                          "type": "boolean",
                                          "default": false,
                                          "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Defines the text of the button that cancels the action"
                                },
                                {
                                  "displayName": "Style",
                                  "name": "style",
                                  "type": "options",
                                  "options": [
                                    {
                                      "name": "Danger",
                                      "value": "danger"
                                    },
                                    {
                                      "name": "Default",
                                      "value": "default"
                                    },
                                    {
                                      "name": "Primary",
                                      "value": "primary"
                                    }
                                  ],
                                  "default": "default",
                                  "description": "Defines the color scheme applied to the confirm button"
                                }
                              ]
                            }
                          ],
                          "description": "Defines an optional confirmation dialog after the button is clicked"
                        }
                      ]
                    }
                  ]
                },
                {
                  "displayName": "Block ID",
                  "name": "blockId",
                  "type": "string",
                  "displayOptions": {
                    "show": {
                      "type": [
                        "section"
                      ]
                    }
                  },
                  "default": "",
                  "description": "A string acting as a unique identifier for a block. You can use this block_id when you receive an interaction payload to identify the source of the action. If not specified, a block_id will be generated. Maximum length for this field is 255 characters."
                },
                {
                  "displayName": "Text",
                  "name": "textUi",
                  "placeholder": "Add Text",
                  "type": "fixedCollection",
                  "typeOptions": {
                    "multipleValues": false
                  },
                  "displayOptions": {
                    "show": {
                      "type": [
                        "section"
                      ]
                    }
                  },
                  "default": {},
                  "options": [
                    {
                      "name": "textValue",
                      "displayName": "Text",
                      "values": [
                        {
                          "displayName": "Type",
                          "name": "type",
                          "type": "options",
                          "options": [
                            {
                              "name": "Markdown",
                              "value": "mrkwdn"
                            },
                            {
                              "name": "Plain Text",
                              "value": "plainText"
                            }
                          ],
                          "default": "mrkwdn",
                          "description": "The formatting to use for this text object"
                        },
                        {
                          "displayName": "Text",
                          "name": "text",
                          "type": "string",
                          "default": "",
                          "description": "The text for the block. This field accepts any of the standard text formatting markup when type is mrkdwn."
                        },
                        {
                          "displayName": "Emoji",
                          "name": "emoji",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "plainText"
                              ]
                            }
                          },
                          "type": "boolean",
                          "default": false,
                          "description": "Whether emojis in a text field should be escaped into the colon emoji format. This field is only usable when type is plain_text."
                        },
                        {
                          "displayName": "Verbatim",
                          "name": "verbatim",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "mrkwdn"
                              ]
                            }
                          },
                          "type": "boolean",
                          "default": false,
                          "description": "Whether to set to false (as is default) URLs will be auto-converted into links, conversation names will be link-ified, and certain mentions will be automatically parsed"
                        }
                      ]
                    }
                  ],
                  "description": "Define the text of the button that cancels the action"
                },
                {
                  "displayName": "Fields",
                  "name": "fieldsUi",
                  "placeholder": "Add Fields",
                  "type": "fixedCollection",
                  "typeOptions": {
                    "multipleValues": true
                  },
                  "displayOptions": {
                    "show": {
                      "type": [
                        "section"
                      ]
                    }
                  },
                  "default": {},
                  "options": [
                    {
                      "name": "fieldsValues",
                      "displayName": "Text",
                      "values": [
                        {
                          "displayName": "Type",
                          "name": "type",
                          "type": "options",
                          "options": [
                            {
                              "name": "Markdown",
                              "value": "mrkwdn"
                            },
                            {
                              "name": "Plain Text",
                              "value": "plainText"
                            }
                          ],
                          "default": "mrkwdn",
                          "description": "The formatting to use for this text object"
                        },
                        {
                          "displayName": "Text",
                          "name": "text",
                          "type": "string",
                          "default": "",
                          "description": "The text for the block. This field accepts any of the standard text formatting markup when type is mrkdwn."
                        },
                        {
                          "displayName": "Emoji",
                          "name": "emoji",
                          "type": "boolean",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "plainText"
                              ]
                            }
                          },
                          "default": false,
                          "description": "Whether emojis in a text field should be escaped into the colon emoji format. This field is only usable when type is plain_text."
                        },
                        {
                          "displayName": "Verbatim",
                          "name": "verbatim",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "mrkwdn"
                              ]
                            }
                          },
                          "type": "boolean",
                          "default": false,
                          "description": "When set to false (as is default) URLs will be auto-converted into links, conversation names will be link-ified, and certain mentions will be automatically parsed"
                        }
                      ]
                    }
                  ],
                  "description": "An array of text objects. Any text objects included with fields will be rendered in a compact format that allows for 2 columns of side-by-side text. Maximum number of items is 10."
                },
                {
                  "displayName": "Accessory",
                  "name": "accessoryUi",
                  "placeholder": "Add Accessory",
                  "type": "fixedCollection",
                  "typeOptions": {
                    "multipleValues": false
                  },
                  "displayOptions": {
                    "show": {
                      "type": [
                        "section"
                      ]
                    }
                  },
                  "default": {},
                  "options": [
                    {
                      "name": "accessoriesValues",
                      "displayName": "Accessory",
                      "values": [
                        {
                          "displayName": "Type",
                          "name": "type",
                          "type": "options",
                          "options": [
                            {
                              "name": "Button",
                              "value": "button"
                            }
                          ],
                          "default": "button",
                          "description": "The type of element"
                        },
                        {
                          "displayName": "Text",
                          "name": "text",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "button"
                              ]
                            }
                          },
                          "type": "string",
                          "default": "",
                          "description": "The text for the block"
                        },
                        {
                          "displayName": "Emoji",
                          "name": "emoji",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "button"
                              ]
                            }
                          },
                          "type": "boolean",
                          "default": false,
                          "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                        },
                        {
                          "displayName": "Action ID",
                          "name": "actionId",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "button"
                              ]
                            }
                          },
                          "type": "string",
                          "default": "",
                          "description": "An identifier for this action. You can use this when you receive an interaction payload to identify the source of the action. Should be unique among all other action_ids used elsewhere by your app."
                        },
                        {
                          "displayName": "URL",
                          "name": "url",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "button"
                              ]
                            }
                          },
                          "type": "string",
                          "default": "",
                          "description": "A URL to load in the user's browser when the button is clicked. Maximum length for this field is 3000 characters. If you're using URL, you'll still receive an interaction payload and will need to send an acknowledgement response."
                        },
                        {
                          "displayName": "Value",
                          "name": "value",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "button"
                              ]
                            }
                          },
                          "type": "string",
                          "default": "",
                          "description": "The value to send along with the interaction payload"
                        },
                        {
                          "displayName": "Style",
                          "name": "style",
                          "displayOptions": {
                            "show": {
                              "type": [
                                "button"
                              ]
                            }
                          },
                          "type": "options",
                          "options": [
                            {
                              "name": "Danger",
                              "value": "danger"
                            },
                            {
                              "name": "Default",
                              "value": "default"
                            },
                            {
                              "name": "Primary",
                              "value": "primary"
                            }
                          ],
                          "default": "default",
                          "description": "Decorates buttons with alternative visual color schemes"
                        },
                        {
                          "displayName": "Confirm",
                          "name": "confirmUi",
                          "placeholder": "Add Confirm",
                          "type": "fixedCollection",
                          "typeOptions": {
                            "multipleValues": false
                          },
                          "displayOptions": {
                            "show": {
                              "type": [
                                "button"
                              ]
                            }
                          },
                          "default": {},
                          "options": [
                            {
                              "name": "confirmValue",
                              "displayName": "Confirm",
                              "values": [
                                {
                                  "displayName": "Title",
                                  "name": "titleUi",
                                  "placeholder": "Add Title",
                                  "type": "fixedCollection",
                                  "typeOptions": {
                                    "multipleValues": false
                                  },
                                  "default": {},
                                  "options": [
                                    {
                                      "name": "titleValue",
                                      "displayName": "Title",
                                      "values": [
                                        {
                                          "displayName": "Text",
                                          "name": "text",
                                          "type": "string",
                                          "default": "",
                                          "description": "Text of the title"
                                        },
                                        {
                                          "displayName": "Emoji",
                                          "name": "emoji",
                                          "type": "boolean",
                                          "default": false,
                                          "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Defines an optional confirmation dialog after the button is clicked"
                                },
                                {
                                  "displayName": "Text",
                                  "name": "textUi",
                                  "placeholder": "Add Text",
                                  "type": "fixedCollection",
                                  "typeOptions": {
                                    "multipleValues": false
                                  },
                                  "default": {},
                                  "options": [
                                    {
                                      "name": "textValue",
                                      "displayName": "Text",
                                      "values": [
                                        {
                                          "displayName": "Text",
                                          "name": "text",
                                          "type": "string",
                                          "default": "",
                                          "description": "The text for the block"
                                        },
                                        {
                                          "displayName": "Emoji",
                                          "name": "emoji",
                                          "type": "boolean",
                                          "default": false,
                                          "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Defines the explanatory text that appears in the confirm dialog"
                                },
                                {
                                  "displayName": "Confirm",
                                  "name": "confirmTextUi",
                                  "placeholder": "Add Confirm",
                                  "type": "fixedCollection",
                                  "typeOptions": {
                                    "multipleValues": false
                                  },
                                  "default": {},
                                  "options": [
                                    {
                                      "name": "confirmValue",
                                      "displayName": "Confirm",
                                      "values": [
                                        {
                                          "displayName": "Text",
                                          "name": "text",
                                          "type": "string",
                                          "default": "",
                                          "description": "Defines the explanatory text that appears in the confirm dialog"
                                        },
                                        {
                                          "displayName": "Emoji",
                                          "name": "emoji",
                                          "type": "boolean",
                                          "default": false,
                                          "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Defines the explanatory text that appears in the confirm dialog"
                                },
                                {
                                  "displayName": "Deny",
                                  "name": "denyUi",
                                  "placeholder": "Add Deny",
                                  "type": "fixedCollection",
                                  "typeOptions": {
                                    "multipleValues": false
                                  },
                                  "default": {},
                                  "options": [
                                    {
                                      "name": "denyValue",
                                      "displayName": "Deny",
                                      "values": [
                                        {
                                          "displayName": "Text",
                                          "name": "text",
                                          "type": "string",
                                          "default": "",
                                          "description": "Define the text of the button that cancels the action"
                                        },
                                        {
                                          "displayName": "Emoji",
                                          "name": "emoji",
                                          "type": "boolean",
                                          "default": false,
                                          "description": "Whether emojis in a text field should be escaped into the colon emoji format"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Define the text of the button that cancels the action"
                                },
                                {
                                  "displayName": "Style",
                                  "name": "style",
                                  "type": "options",
                                  "options": [
                                    {
                                      "name": "Danger",
                                      "value": "danger"
                                    },
                                    {
                                      "name": "Default",
                                      "value": "default"
                                    },
                                    {
                                      "name": "Primary",
                                      "value": "primary"
                                    }
                                  ],
                                  "default": "default",
                                  "description": "Defines the color scheme applied to the confirm button"
                                }
                              ]
                            }
                          ],
                          "description": "Defines an optional confirmation dialog after the button is clicked"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Attachments",
            "name": "attachmentsJson",
            "type": "json",
            "default": "",
            "typeOptions": {
              "alwaysOpenEditWindow": true
            },
            "displayOptions": {
              "show": {
                "resource": [
                  "message"
                ],
                "operation": [
                  "post"
                ],
                "jsonParameters": [
                  true
                ]
              }
            },
            "description": "The attachments to add"
          },
          "property_name": "attachmentsJson"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Blocks",
            "name": "blocksJson",
            "type": "json",
            "default": "",
            "typeOptions": {
              "alwaysOpenEditWindow": true
            },
            "displayOptions": {
              "show": {
                "resource": [
                  "message"
                ],
                "operation": [
                  "post"
                ],
                "jsonParameters": [
                  true
                ]
              }
            },
            "description": "The blocks to add"
          },
          "property_name": "blocksJson"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Attachments",
            "name": "attachments",
            "type": "collection",
            "typeOptions": {
              "multipleValues": true,
              "multipleValueButtonText": "Add attachment"
            },
            "displayOptions": {
              "show": {
                "jsonParameters": [
                  false
                ],
                "operation": [
                  "update"
                ],
                "resource": [
                  "message"
                ]
              }
            },
            "default": {},
            "description": "The attachment to add",
            "placeholder": "Add attachment item",
            "options": [
              {
                "displayName": "Fallback Text",
                "name": "fallback",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Required plain-text summary of the attachment"
              },
              {
                "displayName": "Text",
                "name": "text",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Text to send"
              },
              {
                "displayName": "Title",
                "name": "title",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Title of the message"
              },
              {
                "displayName": "Title Link",
                "name": "title_link",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Link of the title"
              },
              {
                "displayName": "Color",
                "name": "color",
                "type": "color",
                "default": "#ff0000",
                "description": "Color of the line left of text"
              },
              {
                "displayName": "Pretext",
                "name": "pretext",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Text which appears before the message block"
              },
              {
                "displayName": "Author Name",
                "name": "author_name",
                "type": "string",
                "default": "",
                "description": "Name that should appear"
              },
              {
                "displayName": "Author Link",
                "name": "author_link",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Link for the author"
              },
              {
                "displayName": "Author Icon",
                "name": "author_icon",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Icon which should appear for the user"
              },
              {
                "displayName": "Image URL",
                "name": "image_url",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "URL of image"
              },
              {
                "displayName": "Thumbnail URL",
                "name": "thumb_url",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "URL of thumbnail"
              },
              {
                "displayName": "Footer",
                "name": "footer",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Text of footer to add"
              },
              {
                "displayName": "Footer Icon",
                "name": "footer_icon",
                "type": "string",
                "typeOptions": {
                  "alwaysOpenEditWindow": true
                },
                "default": "",
                "description": "Icon which should appear next to footer"
              },
              {
                "displayName": "Timestamp",
                "name": "ts",
                "type": "dateTime",
                "default": "",
                "description": "Time message relates to"
              },
              {
                "displayName": "Fields",
                "name": "fields",
                "placeholder": "Add Fields",
                "description": "Fields to add to message",
                "type": "fixedCollection",
                "typeOptions": {
                  "multipleValues": true
                },
                "default": {},
                "options": [
                  {
                    "name": "item",
                    "displayName": "Item",
                    "values": [
                      {
                        "displayName": "Title",
                        "name": "title",
                        "type": "string",
                        "default": "",
                        "description": "Title of the item"
                      },
                      {
                        "displayName": "Value",
                        "name": "value",
                        "type": "string",
                        "default": "",
                        "description": "Value of the item"
                      },
                      {
                        "displayName": "Short",
                        "name": "short",
                        "type": "boolean",
                        "default": true,
                        "description": "Whether items can be displayed next to each other"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "property_name": "attachments",
          "property_type": [
            {
              "displayName": "Fallback Text",
              "name": "fallback",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Required plain-text summary of the attachment"
            },
            {
              "displayName": "Text",
              "name": "text",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Text to send"
            },
            {
              "displayName": "Title",
              "name": "title",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Title of the message"
            },
            {
              "displayName": "Title Link",
              "name": "title_link",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Link of the title"
            },
            {
              "displayName": "Color",
              "name": "color",
              "type": "color",
              "default": "#ff0000",
              "description": "Color of the line left of text"
            },
            {
              "displayName": "Pretext",
              "name": "pretext",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Text which appears before the message block"
            },
            {
              "displayName": "Author Name",
              "name": "author_name",
              "type": "string",
              "default": "",
              "description": "Name that should appear"
            },
            {
              "displayName": "Author Link",
              "name": "author_link",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Link for the author"
            },
            {
              "displayName": "Author Icon",
              "name": "author_icon",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Icon which should appear for the user"
            },
            {
              "displayName": "Image URL",
              "name": "image_url",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "URL of image"
            },
            {
              "displayName": "Thumbnail URL",
              "name": "thumb_url",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "URL of thumbnail"
            },
            {
              "displayName": "Footer",
              "name": "footer",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Text of footer to add"
            },
            {
              "displayName": "Footer Icon",
              "name": "footer_icon",
              "type": "string",
              "typeOptions": {
                "alwaysOpenEditWindow": true
              },
              "default": "",
              "description": "Icon which should appear next to footer"
            },
            {
              "displayName": "Timestamp",
              "name": "ts",
              "type": "dateTime",
              "default": "",
              "description": "Time message relates to"
            },
            {
              "displayName": "Fields",
              "name": "fields",
              "placeholder": "Add Fields",
              "description": "Fields to add to message",
              "type": "fixedCollection",
              "typeOptions": {
                "multipleValues": true
              },
              "default": {},
              "options": [
                {
                  "name": "item",
                  "displayName": "Item",
                  "values": [
                    {
                      "displayName": "Title",
                      "name": "title",
                      "type": "string",
                      "default": "",
                      "description": "Title of the item"
                    },
                    {
                      "displayName": "Value",
                      "name": "value",
                      "type": "string",
                      "default": "",
                      "description": "Value of the item"
                    },
                    {
                      "displayName": "Short",
                      "name": "short",
                      "type": "boolean",
                      "default": true,
                      "description": "Whether items can be displayed next to each other"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "required": true,
            "default": "",
            "displayOptions": {
              "show": {
                "resource": [
                  "message"
                ],
                "operation": [
                  "delete"
                ]
              }
            },
            "description": "Channel containing the message to be deleted. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Timestamp",
            "name": "timestamp",
            "type": "string",
            "required": true,
            "default": "",
            "displayOptions": {
              "show": {
                "resource": [
                  "message"
                ],
                "operation": [
                  "delete"
                ]
              }
            },
            "description": "Timestamp of the message to be deleted"
          },
          "property_name": "timestamp"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "star"
                ]
              }
            },
            "options": [
              {
                "name": "Add",
                "value": "add",
                "description": "Add a star to an item",
                "action": "Add a star"
              },
              {
                "name": "Delete",
                "value": "delete",
                "description": "Delete a star from an item",
                "action": "Delete a star"
              },
              {
                "name": "Get Many",
                "value": "getAll",
                "description": "Get many stars of autenticated user",
                "action": "Get many stars"
              },
              {
                "name": "Custom API Call",
                "value": "__CUSTOM_API_CALL__"
              }
            ],
            "default": "add"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Add",
              "value": "add",
              "description": "Add a star to an item",
              "action": "Add a star"
            },
            {
              "name": "Delete",
              "value": "delete",
              "description": "Delete a star from an item",
              "action": "Delete a star"
            },
            {
              "name": "Get Many",
              "value": "getAll",
              "description": "Get many stars of autenticated user",
              "action": "Get many stars"
            },
            {
              "name": "Custom API Call",
              "value": "__CUSTOM_API_CALL__"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Options",
            "name": "options",
            "type": "collection",
            "displayOptions": {
              "show": {
                "operation": [
                  "add"
                ],
                "resource": [
                  "star"
                ]
              }
            },
            "default": {},
            "description": "Options to set",
            "placeholder": "Add options",
            "options": [
              {
                "displayName": "Channel Name or ID",
                "name": "channelId",
                "type": "options",
                "typeOptions": {
                  "loadOptionsMethod": "getChannels"
                },
                "default": "",
                "description": "Channel to add star to, or channel where the message to add star to was posted (used with timestamp). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
              },
              {
                "displayName": "File Comment",
                "name": "fileComment",
                "type": "string",
                "default": "",
                "description": "File comment to add star to"
              },
              {
                "displayName": "File ID",
                "name": "fileId",
                "type": "string",
                "default": "",
                "description": "File to add star to"
              },
              {
                "displayName": "Timestamp",
                "name": "timestamp",
                "type": "string",
                "default": "",
                "description": "Timestamp of the message to add star to"
              }
            ]
          },
          "property_name": "options",
          "property_type": [
            {
              "displayName": "Channel Name or ID",
              "name": "channelId",
              "type": "options",
              "typeOptions": {
                "loadOptionsMethod": "getChannels"
              },
              "default": "",
              "description": "Channel to add star to, or channel where the message to add star to was posted (used with timestamp). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
            },
            {
              "displayName": "File Comment",
              "name": "fileComment",
              "type": "string",
              "default": "",
              "description": "File comment to add star to"
            },
            {
              "displayName": "File ID",
              "name": "fileId",
              "type": "string",
              "default": "",
              "description": "File to add star to"
            },
            {
              "displayName": "Timestamp",
              "name": "timestamp",
              "type": "string",
              "default": "",
              "description": "Timestamp of the message to add star to"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Options",
            "name": "options",
            "type": "collection",
            "displayOptions": {
              "show": {
                "operation": [
                  "delete"
                ],
                "resource": [
                  "star"
                ]
              }
            },
            "default": {},
            "description": "Options to set",
            "placeholder": "Add options",
            "options": [
              {
                "displayName": "Channel Name or ID",
                "name": "channelId",
                "type": "options",
                "typeOptions": {
                  "loadOptionsMethod": "getChannels"
                },
                "default": "",
                "description": "Channel to add star to, or channel where the message to add star to was posted (used with timestamp). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
              },
              {
                "displayName": "File ID",
                "name": "fileId",
                "type": "string",
                "default": "",
                "description": "File to add star to"
              },
              {
                "displayName": "File Comment",
                "name": "fileComment",
                "type": "string",
                "default": "",
                "description": "File comment to add star to"
              },
              {
                "displayName": "Timestamp",
                "name": "timestamp",
                "type": "string",
                "default": "",
                "description": "Timestamp of the message to add star to"
              }
            ]
          },
          "property_name": "options",
          "property_type": [
            {
              "displayName": "Channel Name or ID",
              "name": "channelId",
              "type": "options",
              "typeOptions": {
                "loadOptionsMethod": "getChannels"
              },
              "default": "",
              "description": "Channel to add star to, or channel where the message to add star to was posted (used with timestamp). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
            },
            {
              "displayName": "File ID",
              "name": "fileId",
              "type": "string",
              "default": "",
              "description": "File to add star to"
            },
            {
              "displayName": "File Comment",
              "name": "fileComment",
              "type": "string",
              "default": "",
              "description": "File comment to add star to"
            },
            {
              "displayName": "Timestamp",
              "name": "timestamp",
              "type": "string",
              "default": "",
              "description": "Timestamp of the message to add star to"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Return All",
            "name": "returnAll",
            "type": "boolean",
            "displayOptions": {
              "show": {
                "resource": [
                  "star"
                ],
                "operation": [
                  "getAll"
                ]
              }
            },
            "default": false,
            "description": "Whether to return all results or only up to a given limit"
          },
          "property_name": "returnAll"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Limit",
            "name": "limit",
            "type": "number",
            "displayOptions": {
              "show": {
                "resource": [
                  "star"
                ],
                "operation": [
                  "getAll"
                ],
                "returnAll": [
                  false
                ]
              }
            },
            "typeOptions": {
              "minValue": 1,
              "maxValue": 100
            },
            "default": 50,
            "description": "Max number of results to return"
          },
          "property_name": "limit"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "file"
                ]
              }
            },
            "options": [
              {
                "name": "Get",
                "value": "get",
                "description": "Get a file info",
                "action": "Get a file"
              },
              {
                "name": "Get Many",
                "value": "getAll",
                "description": "Get & filters team files",
                "action": "Get many files"
              },
              {
                "name": "Upload",
                "value": "upload",
                "description": "Create or upload an existing file",
                "action": "Upload a file"
              },
              {
                "name": "Custom API Call",
                "value": "__CUSTOM_API_CALL__"
              }
            ],
            "default": "upload"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Get",
              "value": "get",
              "description": "Get a file info",
              "action": "Get a file"
            },
            {
              "name": "Get Many",
              "value": "getAll",
              "description": "Get & filters team files",
              "action": "Get many files"
            },
            {
              "name": "Upload",
              "value": "upload",
              "description": "Create or upload an existing file",
              "action": "Upload a file"
            },
            {
              "name": "Custom API Call",
              "value": "__CUSTOM_API_CALL__"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Binary Data",
            "name": "binaryData",
            "type": "boolean",
            "default": false,
            "displayOptions": {
              "show": {
                "operation": [
                  "upload"
                ],
                "resource": [
                  "file"
                ]
              }
            },
            "description": "Whether the data to upload should be taken from binary field"
          },
          "property_name": "binaryData"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "File Content",
            "name": "fileContent",
            "type": "string",
            "default": "",
            "displayOptions": {
              "show": {
                "operation": [
                  "upload"
                ],
                "resource": [
                  "file"
                ],
                "binaryData": [
                  false
                ]
              }
            },
            "placeholder": "",
            "description": "The text content of the file to upload"
          },
          "property_name": "fileContent"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Binary Property",
            "name": "binaryPropertyName",
            "type": "string",
            "default": "data",
            "required": true,
            "displayOptions": {
              "show": {
                "operation": [
                  "upload"
                ],
                "resource": [
                  "file"
                ],
                "binaryData": [
                  true
                ]
              }
            },
            "placeholder": "",
            "description": "Name of the binary property which contains the data for the file to be uploaded"
          },
          "property_name": "binaryPropertyName"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Options",
            "name": "options",
            "type": "collection",
            "displayOptions": {
              "show": {
                "operation": [
                  "upload"
                ],
                "resource": [
                  "file"
                ]
              }
            },
            "default": {},
            "description": "Other options to set",
            "placeholder": "Add options",
            "options": [
              {
                "displayName": "Channel Names or IDs",
                "name": "channelIds",
                "type": "multiOptions",
                "typeOptions": {
                  "loadOptionsMethod": "getChannels"
                },
                "default": [],
                "description": "The channels to send the file to. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
              },
              {
                "displayName": "File Name",
                "name": "fileName",
                "type": "string",
                "default": "",
                "description": "Filename of file"
              },
              {
                "displayName": "Initial Comment",
                "name": "initialComment",
                "type": "string",
                "default": "",
                "description": "The message text introducing the file in specified channels"
              },
              {
                "displayName": "Thread TS",
                "name": "threadTs",
                "type": "string",
                "default": "",
                "description": "Provide another message's ts value to upload this file as a reply. Never use a reply's ts value; use its parent instead."
              },
              {
                "displayName": "Title",
                "name": "title",
                "type": "string",
                "default": "",
                "description": "Title of file"
              }
            ]
          },
          "property_name": "options",
          "property_type": [
            {
              "displayName": "Channel Names or IDs",
              "name": "channelIds",
              "type": "multiOptions",
              "typeOptions": {
                "loadOptionsMethod": "getChannels"
              },
              "default": [],
              "description": "The channels to send the file to. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
            },
            {
              "displayName": "File Name",
              "name": "fileName",
              "type": "string",
              "default": "",
              "description": "Filename of file"
            },
            {
              "displayName": "Initial Comment",
              "name": "initialComment",
              "type": "string",
              "default": "",
              "description": "The message text introducing the file in specified channels"
            },
            {
              "displayName": "Thread TS",
              "name": "threadTs",
              "type": "string",
              "default": "",
              "description": "Provide another message's ts value to upload this file as a reply. Never use a reply's ts value; use its parent instead."
            },
            {
              "displayName": "Title",
              "name": "title",
              "type": "string",
              "default": "",
              "description": "Title of file"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Return All",
            "name": "returnAll",
            "type": "boolean",
            "displayOptions": {
              "show": {
                "resource": [
                  "file"
                ],
                "operation": [
                  "getAll"
                ]
              }
            },
            "default": false,
            "description": "Whether to return all results or only up to a given limit"
          },
          "property_name": "returnAll"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Limit",
            "name": "limit",
            "type": "number",
            "displayOptions": {
              "show": {
                "resource": [
                  "file"
                ],
                "operation": [
                  "getAll"
                ],
                "returnAll": [
                  false
                ]
              }
            },
            "typeOptions": {
              "minValue": 1,
              "maxValue": 100
            },
            "default": 50,
            "description": "Max number of results to return"
          },
          "property_name": "limit"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Filters",
            "name": "filters",
            "type": "collection",
            "displayOptions": {
              "show": {
                "operation": [
                  "getAll"
                ],
                "resource": [
                  "file"
                ]
              }
            },
            "default": {},
            "placeholder": "Add Field",
            "options": [
              {
                "displayName": "Channel Name or ID",
                "name": "channelId",
                "type": "options",
                "default": "",
                "typeOptions": {
                  "loadOptionsMethod": "getChannels"
                },
                "description": "Channel containing the file to be listed. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
              },
              {
                "displayName": "Show Files Hidden By Limit",
                "name": "showFilesHidden",
                "type": "boolean",
                "default": false,
                "description": "Whether to show truncated file info for files hidden due to being too old, and the team who owns the file being over the file limit"
              },
              {
                "displayName": "Timestamp From",
                "name": "tsFrom",
                "type": "string",
                "default": "",
                "description": "Filter files created after this timestamp (inclusive)"
              },
              {
                "displayName": "Timestamp To",
                "name": "tsTo",
                "type": "string",
                "default": "",
                "description": "Filter files created before this timestamp (inclusive)"
              },
              {
                "displayName": "Types",
                "name": "types",
                "type": "multiOptions",
                "options": [
                  {
                    "name": "All",
                    "value": "all"
                  },
                  {
                    "name": "Google Docs",
                    "value": "gdocs"
                  },
                  {
                    "name": "Images",
                    "value": "images"
                  },
                  {
                    "name": "PDFs",
                    "value": "pdfs"
                  },
                  {
                    "name": "Snippets",
                    "value": "snippets"
                  },
                  {
                    "name": "Spaces",
                    "value": "spaces"
                  },
                  {
                    "name": "zips",
                    "value": "zips"
                  }
                ],
                "default": [
                  "all"
                ],
                "description": "Filter files by type"
              },
              {
                "displayName": "User Name or ID",
                "name": "userId",
                "type": "options",
                "default": "",
                "typeOptions": {
                  "loadOptionsMethod": "getUsers"
                },
                "description": "Filter files created by a single user. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
              }
            ]
          },
          "property_name": "filters",
          "property_type": [
            {
              "displayName": "Channel Name or ID",
              "name": "channelId",
              "type": "options",
              "default": "",
              "typeOptions": {
                "loadOptionsMethod": "getChannels"
              },
              "description": "Channel containing the file to be listed. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
            },
            {
              "displayName": "Show Files Hidden By Limit",
              "name": "showFilesHidden",
              "type": "boolean",
              "default": false,
              "description": "Whether to show truncated file info for files hidden due to being too old, and the team who owns the file being over the file limit"
            },
            {
              "displayName": "Timestamp From",
              "name": "tsFrom",
              "type": "string",
              "default": "",
              "description": "Filter files created after this timestamp (inclusive)"
            },
            {
              "displayName": "Timestamp To",
              "name": "tsTo",
              "type": "string",
              "default": "",
              "description": "Filter files created before this timestamp (inclusive)"
            },
            {
              "displayName": "Types",
              "name": "types",
              "type": "multiOptions",
              "options": [
                {
                  "name": "All",
                  "value": "all"
                },
                {
                  "name": "Google Docs",
                  "value": "gdocs"
                },
                {
                  "name": "Images",
                  "value": "images"
                },
                {
                  "name": "PDFs",
                  "value": "pdfs"
                },
                {
                  "name": "Snippets",
                  "value": "snippets"
                },
                {
                  "name": "Spaces",
                  "value": "spaces"
                },
                {
                  "name": "zips",
                  "value": "zips"
                }
              ],
              "default": [
                "all"
              ],
              "description": "Filter files by type"
            },
            {
              "displayName": "User Name or ID",
              "name": "userId",
              "type": "options",
              "default": "",
              "typeOptions": {
                "loadOptionsMethod": "getUsers"
              },
              "description": "Filter files created by a single user. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "File ID",
            "name": "fileId",
            "type": "string",
            "displayOptions": {
              "show": {
                "resource": [
                  "file"
                ],
                "operation": [
                  "get"
                ]
              }
            },
            "default": ""
          },
          "property_name": "fileId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "reaction"
                ]
              }
            },
            "options": [
              {
                "name": "Add",
                "value": "add",
                "description": "Adds a reaction to a message",
                "action": "Add a reaction"
              },
              {
                "name": "Get",
                "value": "get",
                "description": "Get the reactions of a message",
                "action": "Get a reaction"
              },
              {
                "name": "Remove",
                "value": "remove",
                "description": "Remove a reaction of a message",
                "action": "Remove a reaction"
              },
              {
                "name": "Custom API Call",
                "value": "__CUSTOM_API_CALL__"
              }
            ],
            "default": "add"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Add",
              "value": "add",
              "description": "Adds a reaction to a message",
              "action": "Add a reaction"
            },
            {
              "name": "Get",
              "value": "get",
              "description": "Get the reactions of a message",
              "action": "Get a reaction"
            },
            {
              "name": "Remove",
              "value": "remove",
              "description": "Remove a reaction of a message",
              "action": "Remove a reaction"
            },
            {
              "name": "Custom API Call",
              "value": "__CUSTOM_API_CALL__"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Channel Name or ID",
            "name": "channelId",
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getChannels"
            },
            "required": true,
            "default": "",
            "displayOptions": {
              "show": {
                "resource": [
                  "reaction"
                ],
                "operation": [
                  "add",
                  "get",
                  "remove"
                ]
              }
            },
            "description": "Channel containing the message. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "channelId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Emoji",
            "name": "name",
            "type": "string",
            "required": true,
            "default": "",
            "displayOptions": {
              "show": {
                "resource": [
                  "reaction"
                ],
                "operation": [
                  "add",
                  "remove"
                ]
              }
            },
            "description": "Name of emoji",
            "placeholder": "+1"
          },
          "property_name": "name"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Timestamp",
            "name": "timestamp",
            "type": "string",
            "required": true,
            "default": "",
            "displayOptions": {
              "show": {
                "resource": [
                  "reaction"
                ],
                "operation": [
                  "add",
                  "get",
                  "remove"
                ]
              }
            },
            "description": "Timestamp of the message"
          },
          "property_name": "timestamp"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "user"
                ]
              }
            },
            "options": [
              {
                "name": "Info",
                "value": "info",
                "description": "Get information about a user",
                "action": "Get information about a user"
              },
              {
                "name": "Get Many",
                "value": "getAll",
                "description": "Get a list of many users",
                "action": "Get many users"
              },
              {
                "name": "Get Presence",
                "value": "getPresence",
                "description": "Get online status of a user",
                "action": "Get a user's presence status"
              },
              {
                "name": "Custom API Call",
                "value": "__CUSTOM_API_CALL__"
              }
            ],
            "default": "info"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Info",
              "value": "info",
              "description": "Get information about a user",
              "action": "Get information about a user"
            },
            {
              "name": "Get Many",
              "value": "getAll",
              "description": "Get a list of many users",
              "action": "Get many users"
            },
            {
              "name": "Get Presence",
              "value": "getPresence",
              "description": "Get online status of a user",
              "action": "Get a user's presence status"
            },
            {
              "name": "Custom API Call",
              "value": "__CUSTOM_API_CALL__"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "User ID",
            "name": "user",
            "type": "string",
            "typeOptions": {
              "loadOptionsMethod": "getUsers"
            },
            "default": "",
            "displayOptions": {
              "show": {
                "operation": [
                  "info"
                ],
                "resource": [
                  "user"
                ]
              }
            },
            "required": true,
            "description": "The ID of the user to get information about"
          },
          "property_name": "user"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Return All",
            "name": "returnAll",
            "type": "boolean",
            "displayOptions": {
              "show": {
                "resource": [
                  "user"
                ],
                "operation": [
                  "getAll"
                ]
              }
            },
            "default": false,
            "description": "Whether to return all results or only up to a given limit"
          },
          "property_name": "returnAll"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Limit",
            "name": "limit",
            "type": "number",
            "displayOptions": {
              "show": {
                "resource": [
                  "user"
                ],
                "operation": [
                  "getAll"
                ],
                "returnAll": [
                  false
                ]
              }
            },
            "typeOptions": {
              "minValue": 1,
              "maxValue": 100
            },
            "default": 50,
            "description": "Max number of results to return"
          },
          "property_name": "limit"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "User ID",
            "name": "user",
            "type": "string",
            "typeOptions": {
              "loadOptionsMethod": "getUsers"
            },
            "default": "",
            "displayOptions": {
              "show": {
                "operation": [
                  "getPresence"
                ],
                "resource": [
                  "user"
                ]
              }
            },
            "required": true,
            "description": "The ID of the user to get the online status of"
          },
          "property_name": "user"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "userGroup"
                ]
              }
            },
            "options": [
              {
                "name": "Create",
                "value": "create",
                "description": "Create a user group",
                "action": "Create a user group"
              },
              {
                "name": "Disable",
                "value": "disable",
                "description": "Disable a user group",
                "action": "Disable a user group"
              },
              {
                "name": "Enable",
                "value": "enable",
                "description": "Enable a user group",
                "action": "Enable a user group"
              },
              {
                "name": "Get Many",
                "value": "getAll",
                "description": "Get many user groups",
                "action": "Get many user groups"
              },
              {
                "name": "Update",
                "value": "update",
                "description": "Update a user group",
                "action": "Update a user group"
              },
              {
                "name": "Custom API Call",
                "value": "__CUSTOM_API_CALL__"
              }
            ],
            "default": "create"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Create",
              "value": "create",
              "description": "Create a user group",
              "action": "Create a user group"
            },
            {
              "name": "Disable",
              "value": "disable",
              "description": "Disable a user group",
              "action": "Disable a user group"
            },
            {
              "name": "Enable",
              "value": "enable",
              "description": "Enable a user group",
              "action": "Enable a user group"
            },
            {
              "name": "Get Many",
              "value": "getAll",
              "description": "Get many user groups",
              "action": "Get many user groups"
            },
            {
              "name": "Update",
              "value": "update",
              "description": "Update a user group",
              "action": "Update a user group"
            },
            {
              "name": "Custom API Call",
              "value": "__CUSTOM_API_CALL__"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Name",
            "name": "name",
            "type": "string",
            "default": "",
            "displayOptions": {
              "show": {
                "operation": [
                  "create"
                ],
                "resource": [
                  "userGroup"
                ]
              }
            },
            "required": true,
            "description": "A name for the User Group. Must be unique among User Groups."
          },
          "property_name": "name"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Additional Fields",
            "name": "additionalFields",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "userGroup"
                ],
                "operation": [
                  "create"
                ]
              }
            },
            "options": [
              {
                "displayName": "Channel Names or IDs",
                "name": "channelIds",
                "type": "multiOptions",
                "typeOptions": {
                  "loadOptionsMethod": "getChannels"
                },
                "default": [],
                "description": "A comma-separated string of encoded channel IDs for which the User Group uses as a default. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
              },
              {
                "displayName": "Description",
                "name": "description",
                "type": "string",
                "default": "",
                "description": "A short description of the User Group"
              },
              {
                "displayName": "Handle",
                "name": "handle",
                "type": "string",
                "default": "",
                "description": "A mention handle. Must be unique among channels, users and User Groups."
              },
              {
                "displayName": "Include Count",
                "name": "include_count",
                "type": "boolean",
                "default": true,
                "description": "Whether to include the number of users in each User Group"
              }
            ]
          },
          "property_name": "additionalFields",
          "property_type": [
            {
              "displayName": "Channel Names or IDs",
              "name": "channelIds",
              "type": "multiOptions",
              "typeOptions": {
                "loadOptionsMethod": "getChannels"
              },
              "default": [],
              "description": "A comma-separated string of encoded channel IDs for which the User Group uses as a default. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
            },
            {
              "displayName": "Description",
              "name": "description",
              "type": "string",
              "default": "",
              "description": "A short description of the User Group"
            },
            {
              "displayName": "Handle",
              "name": "handle",
              "type": "string",
              "default": "",
              "description": "A mention handle. Must be unique among channels, users and User Groups."
            },
            {
              "displayName": "Include Count",
              "name": "include_count",
              "type": "boolean",
              "default": true,
              "description": "Whether to include the number of users in each User Group"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "User Group ID",
            "name": "userGroupId",
            "type": "string",
            "default": "",
            "displayOptions": {
              "show": {
                "operation": [
                  "disable"
                ],
                "resource": [
                  "userGroup"
                ]
              }
            },
            "required": true,
            "description": "The encoded ID of the User Group to update"
          },
          "property_name": "userGroupId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Additional Fields",
            "name": "additionalFields",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "userGroup"
                ],
                "operation": [
                  "disable"
                ]
              }
            },
            "options": [
              {
                "displayName": "Include Count",
                "name": "include_count",
                "type": "boolean",
                "default": true,
                "description": "Whether to include the number of users in each User Group"
              }
            ]
          },
          "property_name": "additionalFields",
          "property_type": [
            {
              "displayName": "Include Count",
              "name": "include_count",
              "type": "boolean",
              "default": true,
              "description": "Whether to include the number of users in each User Group"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "User Group ID",
            "name": "userGroupId",
            "type": "string",
            "default": "",
            "displayOptions": {
              "show": {
                "operation": [
                  "enable"
                ],
                "resource": [
                  "userGroup"
                ]
              }
            },
            "required": true,
            "description": "The encoded ID of the User Group to update"
          },
          "property_name": "userGroupId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Additional Fields",
            "name": "additionalFields",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "userGroup"
                ],
                "operation": [
                  "enable"
                ]
              }
            },
            "options": [
              {
                "displayName": "Include Count",
                "name": "include_count",
                "type": "boolean",
                "default": true,
                "description": "Whether to include the number of users in each User Group"
              }
            ]
          },
          "property_name": "additionalFields",
          "property_type": [
            {
              "displayName": "Include Count",
              "name": "include_count",
              "type": "boolean",
              "default": true,
              "description": "Whether to include the number of users in each User Group"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Return All",
            "name": "returnAll",
            "type": "boolean",
            "displayOptions": {
              "show": {
                "operation": [
                  "getAll"
                ],
                "resource": [
                  "userGroup"
                ]
              }
            },
            "default": false,
            "description": "Whether to return all results or only up to a given limit"
          },
          "property_name": "returnAll"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Limit",
            "name": "limit",
            "type": "number",
            "displayOptions": {
              "show": {
                "operation": [
                  "getAll"
                ],
                "resource": [
                  "userGroup"
                ],
                "returnAll": [
                  false
                ]
              }
            },
            "typeOptions": {
              "minValue": 1,
              "maxValue": 500
            },
            "default": 100,
            "description": "Max number of results to return"
          },
          "property_name": "limit"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Additional Fields",
            "name": "additionalFields",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "userGroup"
                ],
                "operation": [
                  "getAll"
                ]
              }
            },
            "options": [
              {
                "displayName": "Include Count",
                "name": "include_count",
                "type": "boolean",
                "default": true,
                "description": "Whether to include the number of users in each User Group"
              },
              {
                "displayName": "Include Disabled",
                "name": "include_disabled",
                "type": "boolean",
                "default": true,
                "description": "Whether to include disabled User Groups"
              },
              {
                "displayName": "Include Users",
                "name": "include_users",
                "type": "boolean",
                "default": true,
                "description": "Whether to include the list of users for each User Group"
              }
            ]
          },
          "property_name": "additionalFields",
          "property_type": [
            {
              "displayName": "Include Count",
              "name": "include_count",
              "type": "boolean",
              "default": true,
              "description": "Whether to include the number of users in each User Group"
            },
            {
              "displayName": "Include Disabled",
              "name": "include_disabled",
              "type": "boolean",
              "default": true,
              "description": "Whether to include disabled User Groups"
            },
            {
              "displayName": "Include Users",
              "name": "include_users",
              "type": "boolean",
              "default": true,
              "description": "Whether to include the list of users for each User Group"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "User Group ID",
            "name": "userGroupId",
            "type": "string",
            "default": "",
            "displayOptions": {
              "show": {
                "operation": [
                  "update"
                ],
                "resource": [
                  "userGroup"
                ]
              }
            },
            "required": true,
            "description": "The encoded ID of the User Group to update"
          },
          "property_name": "userGroupId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Update Fields",
            "name": "updateFields",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "userGroup"
                ],
                "operation": [
                  "update"
                ]
              }
            },
            "options": [
              {
                "displayName": "Channel Names or IDs",
                "name": "channels",
                "type": "multiOptions",
                "typeOptions": {
                  "loadOptionsMethod": "getChannels"
                },
                "default": [],
                "description": "A comma-separated string of encoded channel IDs for which the User Group uses as a default. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
              },
              {
                "displayName": "Description",
                "name": "description",
                "type": "string",
                "default": "",
                "description": "A short description of the User Group"
              },
              {
                "displayName": "Handle",
                "name": "handle",
                "type": "string",
                "default": "",
                "description": "A mention handle. Must be unique among channels, users and User Groups."
              },
              {
                "displayName": "Include Count",
                "name": "include_count",
                "type": "boolean",
                "default": true,
                "description": "Whether to include the number of users in each User Group"
              },
              {
                "displayName": "Name",
                "name": "name",
                "type": "string",
                "default": "",
                "description": "A name for the User Group. Must be unique among User Groups."
              }
            ]
          },
          "property_name": "updateFields",
          "property_type": [
            {
              "displayName": "Channel Names or IDs",
              "name": "channels",
              "type": "multiOptions",
              "typeOptions": {
                "loadOptionsMethod": "getChannels"
              },
              "default": [],
              "description": "A comma-separated string of encoded channel IDs for which the User Group uses as a default. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
            },
            {
              "displayName": "Description",
              "name": "description",
              "type": "string",
              "default": "",
              "description": "A short description of the User Group"
            },
            {
              "displayName": "Handle",
              "name": "handle",
              "type": "string",
              "default": "",
              "description": "A mention handle. Must be unique among channels, users and User Groups."
            },
            {
              "displayName": "Include Count",
              "name": "include_count",
              "type": "boolean",
              "default": true,
              "description": "Whether to include the number of users in each User Group"
            },
            {
              "displayName": "Name",
              "name": "name",
              "type": "string",
              "default": "",
              "description": "A name for the User Group. Must be unique among User Groups."
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "userProfile"
                ]
              }
            },
            "options": [
              {
                "name": "Get",
                "value": "get",
                "description": "Get your user's profile",
                "action": "Get a user profile"
              },
              {
                "name": "Update",
                "value": "update",
                "description": "Update user's profile",
                "action": "Update a user profile"
              },
              {
                "name": "Custom API Call",
                "value": "__CUSTOM_API_CALL__"
              }
            ],
            "default": "get"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Get",
              "value": "get",
              "description": "Get your user's profile",
              "action": "Get a user profile"
            },
            {
              "name": "Update",
              "value": "update",
              "description": "Update user's profile",
              "action": "Update a user profile"
            },
            {
              "name": "Custom API Call",
              "value": "__CUSTOM_API_CALL__"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Additional Fields",
            "name": "additionalFields",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "userProfile"
                ],
                "operation": [
                  "update"
                ]
              }
            },
            "options": [
              {
                "displayName": "Custom Fields",
                "name": "customFieldUi",
                "placeholder": "Add Custom Fields",
                "type": "fixedCollection",
                "typeOptions": {
                  "multipleValues": true
                },
                "default": {},
                "options": [
                  {
                    "name": "customFieldValues",
                    "displayName": "Custom Field",
                    "values": [
                      {
                        "displayName": "Field Name or ID",
                        "name": "id",
                        "type": "options",
                        "typeOptions": {
                          "loadOptionsMethod": "getTeamFields"
                        },
                        "default": "",
                        "description": "ID of the field to set. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
                      },
                      {
                        "displayName": "Field Value",
                        "name": "value",
                        "type": "string",
                        "default": "",
                        "description": "Value of the field to set"
                      },
                      {
                        "displayName": "Alt",
                        "name": "alt",
                        "type": "string",
                        "default": ""
                      }
                    ]
                  }
                ]
              },
              {
                "displayName": "Email",
                "name": "email",
                "type": "string",
                "placeholder": "name@email.com",
                "default": "",
                "description": "This field can only be changed by admins for users on paid teams"
              },
              {
                "displayName": "First Name",
                "name": "first_name",
                "type": "string",
                "default": ""
              },
              {
                "displayName": "Last Name",
                "name": "last_name",
                "type": "string",
                "default": ""
              },
              {
                "displayName": "Status Emoji",
                "name": "status_emoji",
                "type": "string",
                "default": "",
                "description": "Is a string referencing an emoji enabled for the Slack team, such as :mountain_railway:"
              },
              {
                "displayName": "Status Expiration",
                "name": "status_expiration",
                "type": "dateTime",
                "default": "",
                "description": "Is an integer specifying seconds since the epoch, more commonly known as \"UNIX time\". Providing 0 or omitting this field results in a custom status that will not expire."
              },
              {
                "displayName": "Status Text",
                "name": "status_text",
                "type": "string",
                "default": "",
                "description": "Allows up to 100 characters, though we strongly encourage brevity"
              },
              {
                "displayName": "User ID",
                "name": "user",
                "type": "string",
                "default": "",
                "description": "ID of user to change. This argument may only be specified by team admins on paid teams."
              }
            ]
          },
          "property_name": "additionalFields",
          "property_type": [
            {
              "displayName": "Custom Fields",
              "name": "customFieldUi",
              "placeholder": "Add Custom Fields",
              "type": "fixedCollection",
              "typeOptions": {
                "multipleValues": true
              },
              "default": {},
              "options": [
                {
                  "name": "customFieldValues",
                  "displayName": "Custom Field",
                  "values": [
                    {
                      "displayName": "Field Name or ID",
                      "name": "id",
                      "type": "options",
                      "typeOptions": {
                        "loadOptionsMethod": "getTeamFields"
                      },
                      "default": "",
                      "description": "ID of the field to set. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
                    },
                    {
                      "displayName": "Field Value",
                      "name": "value",
                      "type": "string",
                      "default": "",
                      "description": "Value of the field to set"
                    },
                    {
                      "displayName": "Alt",
                      "name": "alt",
                      "type": "string",
                      "default": ""
                    }
                  ]
                }
              ]
            },
            {
              "displayName": "Email",
              "name": "email",
              "type": "string",
              "placeholder": "name@email.com",
              "default": "",
              "description": "This field can only be changed by admins for users on paid teams"
            },
            {
              "displayName": "First Name",
              "name": "first_name",
              "type": "string",
              "default": ""
            },
            {
              "displayName": "Last Name",
              "name": "last_name",
              "type": "string",
              "default": ""
            },
            {
              "displayName": "Status Emoji",
              "name": "status_emoji",
              "type": "string",
              "default": "",
              "description": "Is a string referencing an emoji enabled for the Slack team, such as :mountain_railway:"
            },
            {
              "displayName": "Status Expiration",
              "name": "status_expiration",
              "type": "dateTime",
              "default": "",
              "description": "Is an integer specifying seconds since the epoch, more commonly known as \"UNIX time\". Providing 0 or omitting this field results in a custom status that will not expire."
            },
            {
              "displayName": "Status Text",
              "name": "status_text",
              "type": "string",
              "default": "",
              "description": "Allows up to 100 characters, though we strongly encourage brevity"
            },
            {
              "displayName": "User ID",
              "name": "user",
              "type": "string",
              "default": "",
              "description": "ID of user to change. This argument may only be specified by team admins on paid teams."
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.slack",
          "properties": {
            "displayName": "Additional Fields",
            "name": "additionalFields",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "userProfile"
                ],
                "operation": [
                  "get"
                ]
              }
            },
            "options": [
              {
                "displayName": "Include Labels",
                "name": "include_labels",
                "type": "boolean",
                "default": false,
                "description": "Whether to include labels for each ID in custom profile fields"
              },
              {
                "displayName": "User ID",
                "name": "user",
                "type": "string",
                "default": "",
                "description": "User to retrieve profile info for"
              }
            ]
          },
          "property_name": "additionalFields",
          "property_type": [
            {
              "displayName": "Include Labels",
              "name": "include_labels",
              "type": "boolean",
              "default": false,
              "description": "Whether to include labels for each ID in custom profile fields"
            },
            {
              "displayName": "User ID",
              "name": "user",
              "type": "string",
              "default": "",
              "description": "User to retrieve profile info for"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Resource",
            "name": "resource",
            "type": "options",
            "noDataExpression": true,
            "options": [
              {
                "name": "Coin",
                "value": "coin"
              },
              {
                "name": "Event",
                "value": "event"
              }
            ],
            "default": "coin"
          },
          "property_name": "resource",
          "property_type": [
            {
              "name": "Coin",
              "value": "coin"
            },
            {
              "name": "Event",
              "value": "event"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "coin"
                ]
              }
            },
            "options": [
              {
                "name": "Candlestick",
                "value": "candlestick",
                "description": "Get a candlestick open-high-low-close chart for the selected currency",
                "action": "Get a candlestick for a coin"
              },
              {
                "name": "Get",
                "value": "get",
                "description": "Get current data for a coin",
                "action": "Get a coin"
              },
              {
                "name": "Get Many",
                "value": "getAll",
                "description": "Get many coins",
                "action": "Get many coins"
              },
              {
                "name": "History",
                "value": "history",
                "description": "Get historical data (name, price, market, stats) at a given date for a coin",
                "action": "Get history for a coin"
              },
              {
                "name": "Market",
                "value": "market",
                "description": "Get prices and market related data for all trading pairs that match the selected currency",
                "action": "Get market prices for a coin"
              },
              {
                "name": "Market Chart",
                "value": "marketChart",
                "description": "Get historical market data include price, market cap, and 24h volume (granularity auto)",
                "action": "Get market chart for a coin"
              },
              {
                "name": "Price",
                "value": "price",
                "description": "Get the current price of any cryptocurrencies in any other supported currencies that you need",
                "action": "Get the price for a coin"
              },
              {
                "name": "Ticker",
                "value": "ticker",
                "description": "Get coin tickers",
                "action": "Get the ticker for a coin"
              }
            ],
            "default": "getAll"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Candlestick",
              "value": "candlestick",
              "description": "Get a candlestick open-high-low-close chart for the selected currency",
              "action": "Get a candlestick for a coin"
            },
            {
              "name": "Get",
              "value": "get",
              "description": "Get current data for a coin",
              "action": "Get a coin"
            },
            {
              "name": "Get Many",
              "value": "getAll",
              "description": "Get many coins",
              "action": "Get many coins"
            },
            {
              "name": "History",
              "value": "history",
              "description": "Get historical data (name, price, market, stats) at a given date for a coin",
              "action": "Get history for a coin"
            },
            {
              "name": "Market",
              "value": "market",
              "description": "Get prices and market related data for all trading pairs that match the selected currency",
              "action": "Get market prices for a coin"
            },
            {
              "name": "Market Chart",
              "value": "marketChart",
              "description": "Get historical market data include price, market cap, and 24h volume (granularity auto)",
              "action": "Get market chart for a coin"
            },
            {
              "name": "Price",
              "value": "price",
              "description": "Get the current price of any cryptocurrencies in any other supported currencies that you need",
              "action": "Get the price for a coin"
            },
            {
              "name": "Ticker",
              "value": "ticker",
              "description": "Get coin tickers",
              "action": "Get the ticker for a coin"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Search By",
            "name": "searchBy",
            "required": true,
            "type": "options",
            "options": [
              {
                "name": "Coin ID",
                "value": "coinId"
              },
              {
                "name": "Contract Address",
                "value": "contractAddress"
              }
            ],
            "displayOptions": {
              "show": {
                "operation": [
                  "get",
                  "marketChart",
                  "price"
                ],
                "resource": [
                  "coin"
                ]
              }
            },
            "default": "coinId",
            "description": "Search by coin ID or contract address"
          },
          "property_name": "searchBy",
          "property_type": [
            {
              "name": "Coin ID",
              "value": "coinId"
            },
            {
              "name": "Contract Address",
              "value": "contractAddress"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Coin Name or ID",
            "name": "coinId",
            "required": true,
            "type": "options",
            "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>",
            "typeOptions": {
              "loadOptionsMethod": "getCoins"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "get"
                ],
                "resource": [
                  "coin"
                ]
              }
            },
            "default": "",
            "placeholder": "bitcoin"
          },
          "property_name": "coinId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Base Currency Name or ID",
            "name": "baseCurrency",
            "required": true,
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getCoins"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "candlestick"
                ],
                "resource": [
                  "coin"
                ]
              }
            },
            "default": "",
            "description": "The first currency in the pair. For BTC:ETH this is BTC. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "baseCurrency"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Base Currency Name or ID",
            "name": "baseCurrency",
            "required": true,
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getCurrencies"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "market"
                ],
                "resource": [
                  "coin"
                ]
              }
            },
            "default": "",
            "description": "The first currency in the pair. For BTC:ETH this is BTC. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "baseCurrency"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Coin Name or ID",
            "name": "coinId",
            "required": true,
            "type": "options",
            "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>",
            "typeOptions": {
              "loadOptionsMethod": "getCoins"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "ticker",
                  "history"
                ],
                "resource": [
                  "coin"
                ]
              }
            },
            "default": "",
            "placeholder": "bitcoin"
          },
          "property_name": "coinId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Base Currency Names or IDs",
            "name": "baseCurrencies",
            "required": true,
            "type": "multiOptions",
            "typeOptions": {
              "loadOptionsMethod": "getCoins"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "price"
                ],
                "resource": [
                  "coin"
                ],
                "searchBy": [
                  "coinId"
                ]
              }
            },
            "default": [],
            "placeholder": "bitcoin",
            "description": "The first currency in the pair. For BTC:ETH this is BTC. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "baseCurrencies"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Platform ID",
            "name": "platformId",
            "required": true,
            "displayOptions": {
              "show": {
                "operation": [
                  "get",
                  "marketChart",
                  "price"
                ],
                "resource": [
                  "coin"
                ],
                "searchBy": [
                  "contractAddress"
                ]
              }
            },
            "type": "options",
            "options": [
              {
                "name": "Ethereum",
                "value": "ethereum"
              }
            ],
            "default": "ethereum",
            "description": "The ID of the platform issuing tokens"
          },
          "property_name": "platformId",
          "property_type": [
            {
              "name": "Ethereum",
              "value": "ethereum"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Contract Address",
            "name": "contractAddress",
            "required": true,
            "type": "string",
            "default": "",
            "displayOptions": {
              "show": {
                "operation": [
                  "get",
                  "marketChart"
                ],
                "resource": [
                  "coin"
                ],
                "searchBy": [
                  "contractAddress"
                ]
              }
            },
            "description": "Token's contract address"
          },
          "property_name": "contractAddress"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Contract Addresses",
            "name": "contractAddresses",
            "required": true,
            "type": "string",
            "default": "",
            "displayOptions": {
              "show": {
                "operation": [
                  "price"
                ],
                "resource": [
                  "coin"
                ],
                "searchBy": [
                  "contractAddress"
                ]
              }
            },
            "description": "The contract address of tokens, comma-separated"
          },
          "property_name": "contractAddresses"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Base Currency Name or ID",
            "name": "baseCurrency",
            "required": true,
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getCoins"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "marketChart"
                ],
                "resource": [
                  "coin"
                ],
                "searchBy": [
                  "coinId"
                ]
              },
              "hide": {
                "searchBy": [
                  "contractAddress"
                ]
              }
            },
            "default": "",
            "description": "The first currency in the pair. For BTC:ETH this is BTC. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "baseCurrency"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Quote Currency Name or ID",
            "name": "quoteCurrency",
            "required": true,
            "type": "options",
            "typeOptions": {
              "loadOptionsMethod": "getCurrencies"
            },
            "displayOptions": {
              "show": {
                "operation": [
                  "candlestick",
                  "marketChart"
                ],
                "resource": [
                  "coin"
                ]
              }
            },
            "default": "",
            "description": "The second currency in the pair. For BTC:ETH this is ETH. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "quoteCurrency"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Quote Currency Names or IDs",
            "name": "quoteCurrencies",
            "type": "multiOptions",
            "typeOptions": {
              "loadOptionsMethod": "getCurrencies"
            },
            "required": true,
            "displayOptions": {
              "show": {
                "operation": [
                  "price"
                ],
                "resource": [
                  "coin"
                ]
              }
            },
            "default": [],
            "description": "The second currency in the pair. For BTC:ETH this is ETH. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
          },
          "property_name": "quoteCurrencies"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Range (Days)",
            "name": "days",
            "required": true,
            "type": "options",
            "options": [
              {
                "name": "1",
                "value": "1"
              },
              {
                "name": "7",
                "value": "7"
              },
              {
                "name": "14",
                "value": "14"
              },
              {
                "name": "30",
                "value": "30"
              },
              {
                "name": "90",
                "value": "90"
              },
              {
                "name": "180",
                "value": "180"
              },
              {
                "name": "365",
                "value": "365"
              },
              {
                "name": "Max",
                "value": "max"
              }
            ],
            "displayOptions": {
              "show": {
                "operation": [
                  "marketChart",
                  "candlestick"
                ],
                "resource": [
                  "coin"
                ]
              }
            },
            "default": "",
            "description": "Return data for this many days in the past from now"
          },
          "property_name": "days",
          "property_type": [
            {
              "name": "1",
              "value": "1"
            },
            {
              "name": "7",
              "value": "7"
            },
            {
              "name": "14",
              "value": "14"
            },
            {
              "name": "30",
              "value": "30"
            },
            {
              "name": "90",
              "value": "90"
            },
            {
              "name": "180",
              "value": "180"
            },
            {
              "name": "365",
              "value": "365"
            },
            {
              "name": "Max",
              "value": "max"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Date",
            "name": "date",
            "required": true,
            "type": "dateTime",
            "displayOptions": {
              "show": {
                "operation": [
                  "history"
                ],
                "resource": [
                  "coin"
                ]
              }
            },
            "default": "",
            "description": "The date of data snapshot"
          },
          "property_name": "date"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Return All",
            "name": "returnAll",
            "type": "boolean",
            "displayOptions": {
              "show": {
                "operation": [
                  "getAll",
                  "market",
                  "ticker"
                ],
                "resource": [
                  "coin"
                ]
              }
            },
            "default": false,
            "description": "Whether to return all results or only up to a given limit"
          },
          "property_name": "returnAll"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Limit",
            "name": "limit",
            "type": "number",
            "displayOptions": {
              "show": {
                "operation": [
                  "getAll",
                  "market",
                  "ticker"
                ],
                "resource": [
                  "coin"
                ],
                "returnAll": [
                  false
                ]
              }
            },
            "typeOptions": {
              "minValue": 1,
              "maxValue": 500
            },
            "default": 100,
            "description": "Max number of results to return"
          },
          "property_name": "limit"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Options",
            "name": "options",
            "type": "collection",
            "placeholder": "Add Option",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "coin"
                ],
                "operation": [
                  "market"
                ]
              }
            },
            "options": [
              {
                "displayName": "Coin IDs",
                "name": "ids",
                "type": "string",
                "placeholder": "bitcoin",
                "default": "",
                "description": "Filter results by comma-separated list of coin ID"
              },
              {
                "displayName": "Category",
                "name": "category",
                "type": "options",
                "options": [
                  {
                    "name": "Decentralized Finance Defi",
                    "value": "decentralized_finance_defi"
                  }
                ],
                "default": "decentralized_finance_defi",
                "description": "Filter by coin category"
              },
              {
                "displayName": "Order",
                "name": "order",
                "type": "options",
                "options": [
                  {
                    "name": "Gecko Asc",
                    "value": "gecko_asc"
                  },
                  {
                    "name": "Gecko Desc",
                    "value": "gecko_desc"
                  },
                  {
                    "name": "ID Asc",
                    "value": "id_asc"
                  },
                  {
                    "name": "ID Desc",
                    "value": "id_desc"
                  },
                  {
                    "name": "Market Cap Asc",
                    "value": "market_cap_asc"
                  },
                  {
                    "name": "Market Cap Desc",
                    "value": "market_cap_desc"
                  },
                  {
                    "name": "Volume Asc",
                    "value": "volume_asc"
                  },
                  {
                    "name": "Volume Desc",
                    "value": "volume_desc"
                  }
                ],
                "default": "",
                "description": "Sort results by field"
              },
              {
                "displayName": "Sparkline",
                "name": "sparkline",
                "type": "boolean",
                "default": false,
                "description": "Whether to include sparkline 7 days data"
              },
              {
                "displayName": "Price Change Percentage",
                "name": "price_change_percentage",
                "type": "multiOptions",
                "options": [
                  {
                    "name": "1h",
                    "value": "1h"
                  },
                  {
                    "name": "24h",
                    "value": "24h"
                  },
                  {
                    "name": "7d",
                    "value": "7d"
                  },
                  {
                    "name": "14d",
                    "value": "14d"
                  },
                  {
                    "name": "30d",
                    "value": "30d"
                  },
                  {
                    "name": "200d",
                    "value": "200d"
                  },
                  {
                    "name": "1y",
                    "value": "1y"
                  }
                ],
                "default": [],
                "description": "Include price change percentage for specified times"
              }
            ]
          },
          "property_name": "options",
          "property_type": [
            {
              "displayName": "Coin IDs",
              "name": "ids",
              "type": "string",
              "placeholder": "bitcoin",
              "default": "",
              "description": "Filter results by comma-separated list of coin ID"
            },
            {
              "displayName": "Category",
              "name": "category",
              "type": "options",
              "options": [
                {
                  "name": "Decentralized Finance Defi",
                  "value": "decentralized_finance_defi"
                }
              ],
              "default": "decentralized_finance_defi",
              "description": "Filter by coin category"
            },
            {
              "displayName": "Order",
              "name": "order",
              "type": "options",
              "options": [
                {
                  "name": "Gecko Asc",
                  "value": "gecko_asc"
                },
                {
                  "name": "Gecko Desc",
                  "value": "gecko_desc"
                },
                {
                  "name": "ID Asc",
                  "value": "id_asc"
                },
                {
                  "name": "ID Desc",
                  "value": "id_desc"
                },
                {
                  "name": "Market Cap Asc",
                  "value": "market_cap_asc"
                },
                {
                  "name": "Market Cap Desc",
                  "value": "market_cap_desc"
                },
                {
                  "name": "Volume Asc",
                  "value": "volume_asc"
                },
                {
                  "name": "Volume Desc",
                  "value": "volume_desc"
                }
              ],
              "default": "",
              "description": "Sort results by field"
            },
            {
              "displayName": "Sparkline",
              "name": "sparkline",
              "type": "boolean",
              "default": false,
              "description": "Whether to include sparkline 7 days data"
            },
            {
              "displayName": "Price Change Percentage",
              "name": "price_change_percentage",
              "type": "multiOptions",
              "options": [
                {
                  "name": "1h",
                  "value": "1h"
                },
                {
                  "name": "24h",
                  "value": "24h"
                },
                {
                  "name": "7d",
                  "value": "7d"
                },
                {
                  "name": "14d",
                  "value": "14d"
                },
                {
                  "name": "30d",
                  "value": "30d"
                },
                {
                  "name": "200d",
                  "value": "200d"
                },
                {
                  "name": "1y",
                  "value": "1y"
                }
              ],
              "default": [],
              "description": "Include price change percentage for specified times"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Options",
            "name": "options",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "coin"
                ],
                "operation": [
                  "price"
                ]
              }
            },
            "options": [
              {
                "displayName": "Include 24hr Change",
                "name": "include_24hr_change",
                "type": "boolean",
                "default": false
              },
              {
                "displayName": "Include 24hr Vol",
                "name": "include_24hr_vol",
                "type": "boolean",
                "default": false
              },
              {
                "displayName": "Include Last Updated At",
                "name": "include_last_updated_at",
                "type": "boolean",
                "default": false
              },
              {
                "displayName": "Include Market Cap",
                "name": "include_market_cap",
                "type": "boolean",
                "default": false
              }
            ]
          },
          "property_name": "options",
          "property_type": [
            {
              "displayName": "Include 24hr Change",
              "name": "include_24hr_change",
              "type": "boolean",
              "default": false
            },
            {
              "displayName": "Include 24hr Vol",
              "name": "include_24hr_vol",
              "type": "boolean",
              "default": false
            },
            {
              "displayName": "Include Last Updated At",
              "name": "include_last_updated_at",
              "type": "boolean",
              "default": false
            },
            {
              "displayName": "Include Market Cap",
              "name": "include_market_cap",
              "type": "boolean",
              "default": false
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Options",
            "name": "options",
            "type": "collection",
            "placeholder": "Add Option",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "coin"
                ],
                "operation": [
                  "ticker"
                ]
              }
            },
            "options": [
              {
                "displayName": "Exchange Names or IDs",
                "name": "exchange_ids",
                "type": "multiOptions",
                "typeOptions": {
                  "loadOptionsMethod": "getExchanges"
                },
                "default": [],
                "description": "Filter results by exchange IDs. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
              },
              {
                "displayName": "Include Exchange Logo",
                "name": "include_exchange_logo",
                "type": "boolean",
                "default": false
              },
              {
                "displayName": "Order",
                "name": "order",
                "type": "options",
                "options": [
                  {
                    "name": "Trust Score Desc",
                    "value": "trust_score_desc"
                  },
                  {
                    "name": "Trust Score Asc",
                    "value": "trust_score_asc"
                  },
                  {
                    "name": "Volume Desc",
                    "value": "volume_desc"
                  }
                ],
                "default": "trust_score_desc",
                "description": "Sorts results by the selected rule"
              }
            ]
          },
          "property_name": "options",
          "property_type": [
            {
              "displayName": "Exchange Names or IDs",
              "name": "exchange_ids",
              "type": "multiOptions",
              "typeOptions": {
                "loadOptionsMethod": "getExchanges"
              },
              "default": [],
              "description": "Filter results by exchange IDs. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
            },
            {
              "displayName": "Include Exchange Logo",
              "name": "include_exchange_logo",
              "type": "boolean",
              "default": false
            },
            {
              "displayName": "Order",
              "name": "order",
              "type": "options",
              "options": [
                {
                  "name": "Trust Score Desc",
                  "value": "trust_score_desc"
                },
                {
                  "name": "Trust Score Asc",
                  "value": "trust_score_asc"
                },
                {
                  "name": "Volume Desc",
                  "value": "volume_desc"
                }
              ],
              "default": "trust_score_desc",
              "description": "Sorts results by the selected rule"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Options",
            "name": "options",
            "type": "collection",
            "placeholder": "Add Option",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "coin"
                ],
                "operation": [
                  "history"
                ]
              }
            },
            "options": [
              {
                "displayName": "Localization",
                "name": "localization",
                "type": "boolean",
                "default": true,
                "description": "Whether to exclude localized languages in response"
              }
            ]
          },
          "property_name": "options",
          "property_type": [
            {
              "displayName": "Localization",
              "name": "localization",
              "type": "boolean",
              "default": true,
              "description": "Whether to exclude localized languages in response"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Options",
            "name": "options",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "operation": [
                  "get"
                ],
                "resource": [
                  "coin"
                ]
              }
            },
            "options": [
              {
                "displayName": "Community Data",
                "name": "community_data",
                "type": "boolean",
                "default": false,
                "description": "Whether to include community data"
              },
              {
                "displayName": "Developer Data",
                "name": "developer_data",
                "type": "boolean",
                "default": false,
                "description": "Whether to include developer data"
              },
              {
                "displayName": "Localization",
                "name": "localization",
                "type": "boolean",
                "default": false,
                "description": "Whether to include all localized languages in response"
              },
              {
                "displayName": "Market Data",
                "name": "market_data",
                "type": "boolean",
                "default": false,
                "description": "Whether to include market data"
              },
              {
                "displayName": "Sparkline",
                "name": "sparkline",
                "type": "boolean",
                "default": false,
                "description": "Whether to include sparkline 7 days data (eg. true, false)."
              },
              {
                "displayName": "Tickers",
                "name": "tickers",
                "type": "boolean",
                "default": false,
                "description": "Whether to include tickers data"
              }
            ]
          },
          "property_name": "options",
          "property_type": [
            {
              "displayName": "Community Data",
              "name": "community_data",
              "type": "boolean",
              "default": false,
              "description": "Whether to include community data"
            },
            {
              "displayName": "Developer Data",
              "name": "developer_data",
              "type": "boolean",
              "default": false,
              "description": "Whether to include developer data"
            },
            {
              "displayName": "Localization",
              "name": "localization",
              "type": "boolean",
              "default": false,
              "description": "Whether to include all localized languages in response"
            },
            {
              "displayName": "Market Data",
              "name": "market_data",
              "type": "boolean",
              "default": false,
              "description": "Whether to include market data"
            },
            {
              "displayName": "Sparkline",
              "name": "sparkline",
              "type": "boolean",
              "default": false,
              "description": "Whether to include sparkline 7 days data (eg. true, false)."
            },
            {
              "displayName": "Tickers",
              "name": "tickers",
              "type": "boolean",
              "default": false,
              "description": "Whether to include tickers data"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "event"
                ]
              }
            },
            "options": [
              {
                "name": "Get Many",
                "value": "getAll",
                "description": "Get many events",
                "action": "Get many events"
              }
            ],
            "default": "getAll"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Get Many",
              "value": "getAll",
              "description": "Get many events",
              "action": "Get many events"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Return All",
            "name": "returnAll",
            "type": "boolean",
            "displayOptions": {
              "show": {
                "operation": [
                  "getAll"
                ],
                "resource": [
                  "event"
                ]
              }
            },
            "default": false,
            "description": "Whether to return all results or only up to a given limit"
          },
          "property_name": "returnAll"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Limit",
            "name": "limit",
            "type": "number",
            "displayOptions": {
              "show": {
                "operation": [
                  "getAll"
                ],
                "resource": [
                  "event"
                ],
                "returnAll": [
                  false
                ]
              }
            },
            "typeOptions": {
              "minValue": 1,
              "maxValue": 500
            },
            "default": 100,
            "description": "Max number of results to return"
          },
          "property_name": "limit"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.coinGecko",
          "properties": {
            "displayName": "Options",
            "name": "options",
            "type": "collection",
            "placeholder": "Add Option",
            "default": {},
            "displayOptions": {
              "show": {
                "operation": [
                  "getAll"
                ],
                "resource": [
                  "event"
                ]
              }
            },
            "options": [
              {
                "displayName": "Country Code",
                "name": "country_code",
                "type": "options",
                "typeOptions": {
                  "loadOptionsMethod": "getEventCountryCodes"
                },
                "default": "",
                "description": "Country code of event. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
              },
              {
                "displayName": "From Date",
                "name": "from_date",
                "type": "dateTime",
                "default": "",
                "description": "Lists events after this date"
              },
              {
                "displayName": "To Date",
                "name": "to_date",
                "type": "dateTime",
                "default": "",
                "description": "Lists events before this date"
              },
              {
                "displayName": "Type Name or ID",
                "name": "type",
                "type": "options",
                "typeOptions": {
                  "loadOptionsMethod": "getEventTypes"
                },
                "default": "",
                "description": "Type of event. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
              },
              {
                "displayName": "Upcoming Events Only",
                "name": "upcoming_events_only",
                "type": "boolean",
                "default": true,
                "description": "Whether to list only upcoming events"
              }
            ]
          },
          "property_name": "options",
          "property_type": [
            {
              "displayName": "Country Code",
              "name": "country_code",
              "type": "options",
              "typeOptions": {
                "loadOptionsMethod": "getEventCountryCodes"
              },
              "default": "",
              "description": "Country code of event. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
            },
            {
              "displayName": "From Date",
              "name": "from_date",
              "type": "dateTime",
              "default": "",
              "description": "Lists events after this date"
            },
            {
              "displayName": "To Date",
              "name": "to_date",
              "type": "dateTime",
              "default": "",
              "description": "Lists events before this date"
            },
            {
              "displayName": "Type Name or ID",
              "name": "type",
              "type": "options",
              "typeOptions": {
                "loadOptionsMethod": "getEventTypes"
              },
              "default": "",
              "description": "Type of event. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>."
            },
            {
              "displayName": "Upcoming Events Only",
              "name": "upcoming_events_only",
              "type": "boolean",
              "default": true,
              "description": "Whether to list only upcoming events"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Source",
            "name": "source",
            "type": "options",
            "default": "deliveryApi",
            "description": "Pick where your data comes from, delivery or preview API",
            "options": [
              {
                "name": "Delivery API",
                "value": "deliveryApi"
              },
              {
                "name": "Preview API",
                "value": "previewApi"
              }
            ]
          },
          "property_name": "source",
          "property_type": [
            {
              "name": "Delivery API",
              "value": "deliveryApi"
            },
            {
              "name": "Preview API",
              "value": "previewApi"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Resource",
            "name": "resource",
            "type": "options",
            "noDataExpression": true,
            "options": [
              {
                "name": "Asset",
                "value": "asset"
              },
              {
                "name": "Content Type",
                "value": "contentType"
              },
              {
                "name": "Entry",
                "value": "entry"
              },
              {
                "name": "Locale",
                "value": "locale"
              },
              {
                "name": "Space",
                "value": "space"
              }
            ],
            "default": "entry"
          },
          "property_name": "resource",
          "property_type": [
            {
              "name": "Asset",
              "value": "asset"
            },
            {
              "name": "Content Type",
              "value": "contentType"
            },
            {
              "name": "Entry",
              "value": "entry"
            },
            {
              "name": "Locale",
              "value": "locale"
            },
            {
              "name": "Space",
              "value": "space"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "space"
                ]
              }
            },
            "options": [
              {
                "name": "Get",
                "value": "get"
              }
            ],
            "default": "get"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Get",
              "value": "get"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "contentType"
                ]
              }
            },
            "options": [
              {
                "name": "Get",
                "value": "get"
              }
            ],
            "default": "get"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Get",
              "value": "get"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "entry"
                ]
              }
            },
            "options": [
              {
                "name": "Get",
                "value": "get"
              },
              {
                "name": "Get Many",
                "value": "getAll"
              }
            ],
            "default": "get"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Get",
              "value": "get"
            },
            {
              "name": "Get Many",
              "value": "getAll"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "asset"
                ]
              }
            },
            "options": [
              {
                "name": "Get",
                "value": "get"
              },
              {
                "name": "Get Many",
                "value": "getAll"
              }
            ],
            "default": "getAll"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Get",
              "value": "get"
            },
            {
              "name": "Get Many",
              "value": "getAll"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Operation",
            "name": "operation",
            "type": "options",
            "noDataExpression": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "locale"
                ]
              }
            },
            "options": [
              {
                "name": "Get Many",
                "value": "getAll"
              }
            ],
            "default": "getAll"
          },
          "property_name": "operation",
          "property_type": [
            {
              "name": "Get Many",
              "value": "getAll"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Environment ID",
            "name": "environmentId",
            "type": "string",
            "displayOptions": {
              "show": {
                "resource": [
                  "contentType"
                ],
                "operation": [
                  "get"
                ]
              }
            },
            "default": "master",
            "description": "The ID for the Contentful environment (e.g. master, staging, etc.). Depending on your plan, you might not have environments. In that case use \"master\"."
          },
          "property_name": "environmentId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Content Type ID",
            "name": "contentTypeId",
            "type": "string",
            "default": "",
            "required": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "contentType"
                ],
                "operation": [
                  "get"
                ]
              }
            }
          },
          "property_name": "contentTypeId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Additional Fields",
            "name": "additionalFields",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "contentType"
                ],
                "operation": [
                  "get"
                ]
              }
            },
            "options": [
              {
                "displayName": "RAW Data",
                "name": "rawData",
                "type": "boolean",
                "default": false,
                "description": "Whether the data should be returned RAW instead of parsed"
              }
            ]
          },
          "property_name": "additionalFields",
          "property_type": [
            {
              "displayName": "RAW Data",
              "name": "rawData",
              "type": "boolean",
              "default": false,
              "description": "Whether the data should be returned RAW instead of parsed"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Environment ID",
            "name": "environmentId",
            "type": "string",
            "displayOptions": {
              "show": {
                "resource": [
                  "entry"
                ],
                "operation": [
                  "get",
                  "getAll"
                ]
              }
            },
            "default": "master",
            "description": "The ID for the Contentful environment (e.g. master, staging, etc.). Depending on your plan, you might not have environments. In that case use \"master\"."
          },
          "property_name": "environmentId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Return All",
            "name": "returnAll",
            "type": "boolean",
            "displayOptions": {
              "show": {
                "operation": [
                  "getAll"
                ],
                "resource": [
                  "entry"
                ]
              }
            },
            "default": false,
            "description": "Whether to return all results or only up to a given limit"
          },
          "property_name": "returnAll"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Limit",
            "name": "limit",
            "type": "number",
            "displayOptions": {
              "show": {
                "operation": [
                  "getAll"
                ],
                "resource": [
                  "entry"
                ],
                "returnAll": [
                  false
                ]
              }
            },
            "typeOptions": {
              "minValue": 1,
              "maxValue": 500
            },
            "default": 100,
            "description": "Max number of results to return"
          },
          "property_name": "limit"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Additional Fields",
            "name": "additionalFields",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "entry"
                ],
                "operation": [
                  "getAll"
                ]
              }
            },
            "options": [
              {
                "displayName": "Content Type ID",
                "name": "content_type",
                "type": "string",
                "default": "",
                "description": "To search for entries with a specific content type"
              },
              {
                "displayName": "Equal",
                "name": "equal",
                "type": "string",
                "default": "",
                "placeholder": "fields.title=n8n",
                "description": "Search for all data that matches the condition: {attribute}={value}. Attribute can use dot notation."
              },
              {
                "displayName": "Exclude",
                "name": "exclude",
                "type": "string",
                "default": "",
                "placeholder": "fields.tags[nin]=accessories,flowers",
                "description": "Search for all data that matches the condition: {attribute}[nin]={value}. Attribute can use dot notation."
              },
              {
                "displayName": "Exist",
                "name": "exist",
                "type": "string",
                "default": "",
                "placeholder": "fields.tags[exists]=true",
                "description": "Search for all data that matches the condition: {attribute}[exists]={value}. Attribute can use dot notation."
              },
              {
                "displayName": "Fields",
                "name": "select",
                "type": "string",
                "placeholder": "fields.title",
                "default": "",
                "description": "The select operator allows you to choose what fields to return from an entity. You can choose multiple values by combining comma-separated operators."
              },
              {
                "displayName": "Include",
                "name": "include",
                "type": "string",
                "default": "",
                "placeholder": "fields.tags[in]=accessories,flowers",
                "description": "Search for all data that matches the condition: {attribute}[in]={value}. Attribute can use dot notation."
              },
              {
                "displayName": "Not Equal",
                "name": "notEqual",
                "type": "string",
                "default": "",
                "placeholder": "fields.title[ne]=n8n",
                "description": "Search for all data that matches the condition: {attribute}[ne]={value}. Attribute can use dot notation."
              },
              {
                "displayName": "Order",
                "name": "order",
                "type": "string",
                "default": "",
                "placeholder": "sys.createdAt",
                "description": "You can order items in the response by specifying the order search parameter. You can use sys properties (such as sys.createdAt) or field values (such as fields.myCustomDateField) for ordering."
              },
              {
                "displayName": "Query",
                "name": "query",
                "type": "string",
                "default": "",
                "description": "Full-text search is case insensitive and might return more results than expected. A query will only take values with more than 1 character."
              },
              {
                "displayName": "RAW Data",
                "name": "rawData",
                "type": "boolean",
                "default": false,
                "description": "Whether the data should be returned RAW instead of parsed"
              }
            ]
          },
          "property_name": "additionalFields",
          "property_type": [
            {
              "displayName": "Content Type ID",
              "name": "content_type",
              "type": "string",
              "default": "",
              "description": "To search for entries with a specific content type"
            },
            {
              "displayName": "Equal",
              "name": "equal",
              "type": "string",
              "default": "",
              "placeholder": "fields.title=n8n",
              "description": "Search for all data that matches the condition: {attribute}={value}. Attribute can use dot notation."
            },
            {
              "displayName": "Exclude",
              "name": "exclude",
              "type": "string",
              "default": "",
              "placeholder": "fields.tags[nin]=accessories,flowers",
              "description": "Search for all data that matches the condition: {attribute}[nin]={value}. Attribute can use dot notation."
            },
            {
              "displayName": "Exist",
              "name": "exist",
              "type": "string",
              "default": "",
              "placeholder": "fields.tags[exists]=true",
              "description": "Search for all data that matches the condition: {attribute}[exists]={value}. Attribute can use dot notation."
            },
            {
              "displayName": "Fields",
              "name": "select",
              "type": "string",
              "placeholder": "fields.title",
              "default": "",
              "description": "The select operator allows you to choose what fields to return from an entity. You can choose multiple values by combining comma-separated operators."
            },
            {
              "displayName": "Include",
              "name": "include",
              "type": "string",
              "default": "",
              "placeholder": "fields.tags[in]=accessories,flowers",
              "description": "Search for all data that matches the condition: {attribute}[in]={value}. Attribute can use dot notation."
            },
            {
              "displayName": "Not Equal",
              "name": "notEqual",
              "type": "string",
              "default": "",
              "placeholder": "fields.title[ne]=n8n",
              "description": "Search for all data that matches the condition: {attribute}[ne]={value}. Attribute can use dot notation."
            },
            {
              "displayName": "Order",
              "name": "order",
              "type": "string",
              "default": "",
              "placeholder": "sys.createdAt",
              "description": "You can order items in the response by specifying the order search parameter. You can use sys properties (such as sys.createdAt) or field values (such as fields.myCustomDateField) for ordering."
            },
            {
              "displayName": "Query",
              "name": "query",
              "type": "string",
              "default": "",
              "description": "Full-text search is case insensitive and might return more results than expected. A query will only take values with more than 1 character."
            },
            {
              "displayName": "RAW Data",
              "name": "rawData",
              "type": "boolean",
              "default": false,
              "description": "Whether the data should be returned RAW instead of parsed"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Entry ID",
            "name": "entryId",
            "type": "string",
            "default": "",
            "required": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "entry"
                ],
                "operation": [
                  "get"
                ]
              }
            }
          },
          "property_name": "entryId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Environment ID",
            "name": "environmentId",
            "type": "string",
            "displayOptions": {
              "show": {
                "resource": [
                  "asset"
                ],
                "operation": [
                  "get",
                  "getAll"
                ]
              }
            },
            "default": "master",
            "description": "The ID for the Contentful environment (e.g. master, staging, etc.). Depending on your plan, you might not have environments. In that case use \"master\"."
          },
          "property_name": "environmentId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Return All",
            "name": "returnAll",
            "type": "boolean",
            "displayOptions": {
              "show": {
                "operation": [
                  "getAll"
                ],
                "resource": [
                  "asset"
                ]
              }
            },
            "default": false,
            "description": "Whether to return all results or only up to a given limit"
          },
          "property_name": "returnAll"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Limit",
            "name": "limit",
            "type": "number",
            "displayOptions": {
              "show": {
                "operation": [
                  "getAll"
                ],
                "resource": [
                  "asset"
                ],
                "returnAll": [
                  false
                ]
              }
            },
            "typeOptions": {
              "minValue": 1,
              "maxValue": 500
            },
            "default": 100,
            "description": "Max number of results to return"
          },
          "property_name": "limit"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Asset ID",
            "name": "assetId",
            "type": "string",
            "default": "",
            "required": true,
            "displayOptions": {
              "show": {
                "resource": [
                  "asset"
                ],
                "operation": [
                  "get"
                ]
              }
            }
          },
          "property_name": "assetId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Additional Fields",
            "name": "additionalFields",
            "type": "collection",
            "placeholder": "Add Field",
            "default": {},
            "displayOptions": {
              "show": {
                "resource": [
                  "asset"
                ],
                "operation": [
                  "getAll"
                ]
              }
            },
            "options": [
              {
                "displayName": "Equal",
                "name": "equal",
                "type": "string",
                "default": "",
                "placeholder": "fields.title=n8n",
                "description": "Search for all data that matches the condition: {attribute}={value}. Attribute can use dot notation."
              },
              {
                "displayName": "Exclude",
                "name": "exclude",
                "type": "string",
                "default": "",
                "placeholder": "fields.tags[nin]=accessories,flowers",
                "description": "Search for all data that matches the condition: {attribute}[nin]={value}. Attribute can use dot notation."
              },
              {
                "displayName": "Exist",
                "name": "exist",
                "type": "string",
                "default": "",
                "placeholder": "fields.tags[exists]=true",
                "description": "Search for all data that matches the condition: {attribute}[exists]={value}. Attribute can use dot notation."
              },
              {
                "displayName": "Fields",
                "name": "select",
                "type": "string",
                "placeholder": "fields.title",
                "default": "",
                "description": "The select operator allows you to choose what fields to return from an entity. You can choose multiple values by combining comma-separated operators."
              },
              {
                "displayName": "Include",
                "name": "include",
                "type": "string",
                "default": "",
                "placeholder": "fields.tags[in]=accessories,flowers",
                "description": "Search for all data that matches the condition: {attribute}[in]={value}. Attribute can use dot notation."
              },
              {
                "displayName": "Not Equal",
                "name": "notEqual",
                "type": "string",
                "default": "",
                "placeholder": "fields.title[ne]=n8n",
                "description": "Search for all data that matches the condition: {attribute}[ne]={value}. Attribute can use dot notation."
              },
              {
                "displayName": "Order",
                "name": "order",
                "type": "string",
                "default": "",
                "placeholder": "sys.createdAt",
                "description": "You can order items in the response by specifying the order search parameter. You can use sys properties (such as sys.createdAt) or field values (such as fields.myCustomDateField) for ordering."
              },
              {
                "displayName": "Query",
                "name": "query",
                "type": "string",
                "default": "",
                "description": "Full-text search is case insensitive and might return more results than expected. A query will only take values with more than 1 character."
              },
              {
                "displayName": "RAW Data",
                "name": "rawData",
                "type": "boolean",
                "default": false,
                "description": "Whether the data should be returned RAW instead of parsed"
              }
            ]
          },
          "property_name": "additionalFields",
          "property_type": [
            {
              "displayName": "Equal",
              "name": "equal",
              "type": "string",
              "default": "",
              "placeholder": "fields.title=n8n",
              "description": "Search for all data that matches the condition: {attribute}={value}. Attribute can use dot notation."
            },
            {
              "displayName": "Exclude",
              "name": "exclude",
              "type": "string",
              "default": "",
              "placeholder": "fields.tags[nin]=accessories,flowers",
              "description": "Search for all data that matches the condition: {attribute}[nin]={value}. Attribute can use dot notation."
            },
            {
              "displayName": "Exist",
              "name": "exist",
              "type": "string",
              "default": "",
              "placeholder": "fields.tags[exists]=true",
              "description": "Search for all data that matches the condition: {attribute}[exists]={value}. Attribute can use dot notation."
            },
            {
              "displayName": "Fields",
              "name": "select",
              "type": "string",
              "placeholder": "fields.title",
              "default": "",
              "description": "The select operator allows you to choose what fields to return from an entity. You can choose multiple values by combining comma-separated operators."
            },
            {
              "displayName": "Include",
              "name": "include",
              "type": "string",
              "default": "",
              "placeholder": "fields.tags[in]=accessories,flowers",
              "description": "Search for all data that matches the condition: {attribute}[in]={value}. Attribute can use dot notation."
            },
            {
              "displayName": "Not Equal",
              "name": "notEqual",
              "type": "string",
              "default": "",
              "placeholder": "fields.title[ne]=n8n",
              "description": "Search for all data that matches the condition: {attribute}[ne]={value}. Attribute can use dot notation."
            },
            {
              "displayName": "Order",
              "name": "order",
              "type": "string",
              "default": "",
              "placeholder": "sys.createdAt",
              "description": "You can order items in the response by specifying the order search parameter. You can use sys properties (such as sys.createdAt) or field values (such as fields.myCustomDateField) for ordering."
            },
            {
              "displayName": "Query",
              "name": "query",
              "type": "string",
              "default": "",
              "description": "Full-text search is case insensitive and might return more results than expected. A query will only take values with more than 1 character."
            },
            {
              "displayName": "RAW Data",
              "name": "rawData",
              "type": "boolean",
              "default": false,
              "description": "Whether the data should be returned RAW instead of parsed"
            }
          ]
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Environment ID",
            "name": "environmentId",
            "type": "string",
            "displayOptions": {
              "show": {
                "resource": [
                  "locale"
                ],
                "operation": [
                  "get",
                  "getAll"
                ]
              }
            },
            "default": "master",
            "description": "The ID for the Contentful environment (e.g. master, staging, etc.). Depending on your plan, you might not have environments. In that case use \"master\"."
          },
          "property_name": "environmentId"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Return All",
            "name": "returnAll",
            "type": "boolean",
            "displayOptions": {
              "show": {
                "operation": [
                  "getAll"
                ],
                "resource": [
                  "locale"
                ]
              }
            },
            "default": false,
            "description": "Whether to return all results or only up to a given limit"
          },
          "property_name": "returnAll"
        }
      },
      {
        "json": {
          "name": "n8n-nodes-base.contentful",
          "properties": {
            "displayName": "Limit",
            "name": "limit",
            "type": "number",
            "displayOptions": {
              "show": {
                "operation": [
                  "getAll"
                ],
                "resource": [
                  "locale"
                ],
                "returnAll": [
                  false
                ]
              }
            },
            "typeOptions": {
              "minValue": 1,
              "maxValue": 500
            },
            "default": 100,
            "description": "Max number of results to return"
          },
          "property_name": "limit"
        }
      }
    ],
    "Merge": [
      {
        "json": {
          "operation": "candlestick",
          "option_description": "Get a candlestick open-high-low-close chart for the selected currency",
          "name": "n8n-nodes-base.coinGecko",
          "resource": "coin"
        }
      },
      {
        "json": {
          "operation": "get",
          "option_description": "Get current data for a coin",
          "name": "n8n-nodes-base.coinGecko",
          "resource": "coin"
        }
      },
      {
        "json": {
          "operation": "getAll",
          "option_description": "Get many coins",
          "name": "n8n-nodes-base.coinGecko",
          "resource": "coin"
        }
      },
      {
        "json": {
          "operation": "history",
          "option_description": "Get historical data (name, price, market, stats) at a given date for a coin",
          "name": "n8n-nodes-base.coinGecko",
          "resource": "coin"
        }
      },
      {
        "json": {
          "operation": "market",
          "option_description": "Get prices and market related data for all trading pairs that match the selected currency",
          "name": "n8n-nodes-base.coinGecko",
          "resource": "coin"
        }
      },
      {
        "json": {
          "operation": "marketChart",
          "option_description": "Get historical market data include price, market cap, and 24h volume (granularity auto)",
          "name": "n8n-nodes-base.coinGecko",
          "resource": "coin"
        }
      },
      {
        "json": {
          "operation": "price",
          "option_description": "Get the current price of any cryptocurrencies in any other supported currencies that you need",
          "name": "n8n-nodes-base.coinGecko",
          "resource": "coin"
        }
      },
      {
        "json": {
          "operation": "ticker",
          "option_description": "Get coin tickers",
          "name": "n8n-nodes-base.coinGecko",
          "resource": "coin"
        }
      },
      {
        "json": {
          "operation": "getAll",
          "option_description": "Get many events",
          "name": "n8n-nodes-base.coinGecko",
          "resource": "event"
        }
      },
      {
        "json": {
          "operation": "get",
          "name": "n8n-nodes-base.contentful",
          "resource": "space"
        }
      },
      {
        "json": {
          "operation": "get",
          "name": "n8n-nodes-base.contentful",
          "resource": "contentType"
        }
      },
      {
        "json": {
          "operation": "get",
          "name": "n8n-nodes-base.contentful",
          "resource": "entry"
        }
      },
      {
        "json": {
          "operation": "getAll",
          "name": "n8n-nodes-base.contentful",
          "resource": "entry"
        }
      },
      {
        "json": {
          "operation": "get",
          "name": "n8n-nodes-base.contentful",
          "resource": "asset"
        }
      },
      {
        "json": {
          "operation": "getAll",
          "name": "n8n-nodes-base.contentful",
          "resource": "asset"
        }
      },
      {
        "json": {
          "operation": "getAll",
          "name": "n8n-nodes-base.contentful",
          "resource": "locale"
        }
      },
      {
        "json": {
          "operation": "compress",
          "name": "n8n-nodes-base.compression"
        }
      },
      {
        "json": {
          "operation": "decompress",
          "name": "n8n-nodes-base.compression"
        }
      }
    ]
  },
  "connections": {
    "Set2": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Item Lists2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Called By Another Workflow": {
      "main": [
        [
          {
            "node": "Set2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item Lists2": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "IF2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF1": {
      "main": [
        [
          {
            "node": "Set1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item Lists3": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set3": {
      "main": [
        [
          {
            "node": "Item Lists1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF2": {
      "main": [
        [
          {
            "node": "Item Lists3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "IF3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF3": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set4": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Set3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF4": {
      "main": [
        [
          {
            "node": "Google Cloud Firestore",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "IF5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF5": {
      "main": [
        [
          {
            "node": "IF6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "IF7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF6": {
      "main": [
        [
          {
            "node": "Google Cloud Firestore",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Cloud Firestore1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF7": {
      "main": [
        [
          {
            "node": "Google Cloud Firestore2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Cloud Firestore3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item Lists1": {
      "main": [
        [
          {
            "node": "IF4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "hash": "05c048e05dfea83663bbfbce5702899d",
  "id": 1025,
  "meta": {
    "instanceId": "ed6ef39cc6422be5fc30d4cdc419aa16ae92ea01e88abf334b379f622c4984f7"
  },
  "tags": []
}